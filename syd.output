Terminals unused in grammar

    '%'


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: METH_LIST
    2        | %empty

    3 METH_LIST: METH METH_LIST
    4          | METH

    5 METH: TYPE ID '(' PARAMS ')' BODY

    6 PARAMS: FORMALS TYPE ID
    7       | %empty

    8 FORMALS: FORMALS TYPE ID ','
    9        | %empty

   10 TYPE: INT

   11 BODY: '{' DECLS STMTS '}'

   12 DECLS: DECL_LIST DECL
   13      | %empty

   14 DECL_LIST: DECL_LIST DECL
   15          | %empty

   16 DECL: TYPE ID VARS ';'
   17     | TYPE ID '=' EXPR VARS ';'

   18 VARS: ',' ID VARS
   19     | ',' ID '=' EXPR VARS
   20     | %empty

   21 STMTS: STMTS STMT
   22      | %empty

   23 STMT: ASSIGN ';'
   24     | RETURN EXPR ';'
   25     | IF '(' EXPR ')' STMT ELSE STMT
   26     | WHILE '(' EXPR ')' STMT
   27     | BREAK ';'
   28     | BLOCK
   29     | ';'

   30 BLOCK: '{' STMTS '}'

   31 ASSIGN: LOCATION '=' EXPR

   32 LOCATION: ID

   33 METHOD: ID

   34 EXPR: ADD_EXPR RELOP ADD_EXPR
   35     | ADD_EXPR

   36 RELOP: LE
   37      | LT
   38      | GT
   39      | GE
   40      | EQ
   41      | NE

   42 ADD_EXPR: ADD_EXPR ADDOP TERM
   43         | TERM

   44 ADDOP: '+'
   45      | '-'

   46 TERM: TERM MULOP FACTOR
   47     | FACTOR

   48 MULOP: '*'
   49      | '/'

   50 FACTOR: '(' EXPR ')'
   51       | LOCATION
   52       | NUM
   53       | TRUE
   54       | FALSE
   55       | METHOD '(' ACTUALS ')'

   56 ACTUALS: ARGS EXPR
   57        | %empty

   58 ARGS: ARGS EXPR ','
   59     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '%' <ystr> (37)
    '(' <ystr> (40) 5 25 26 50 55
    ')' <ystr> (41) 5 25 26 50 55
    '*' <ystr> (42) 48
    '+' <ystr> (43) 44
    ',' <ystr> (44) 8 18 19 58
    '-' <ystr> (45) 45
    '/' <ystr> (47) 49
    ';' <ystr> (59) 16 17 23 24 27 29
    '=' <ystr> (61) 17 19 31
    '{' <ystr> (123) 11 30
    '}' <ystr> (125) 11 30
    error (256)
    RETURN <yint> (258) 24
    BREAK <yint> (259) 27
    ELSE <yint> (260) 25
    IF <yint> (261) 25
    INT <yint> (262) 10
    WHILE <yint> (263) 26
    TRUE <yint> (264) 53
    FALSE <yint> (265) 54
    GT <yint> (266) 38
    LT <yint> (267) 37
    GE <yint> (268) 39
    LE <yint> (269) 36
    EQ <yint> (270) 40
    NE <yint> (271) 41
    ID <ystr> (272) 5 6 8 16 17 18 19 32 33
    NUM <ystr> (273) 52


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    PROGRAM <nonterm> (32)
        on left: 1 2
        on right: 0
    METH_LIST <nonterm> (33)
        on left: 3 4
        on right: 1 3
    METH <nonterm> (34)
        on left: 5
        on right: 3 4
    PARAMS <nonterm> (35)
        on left: 6 7
        on right: 5
    FORMALS <nonterm> (36)
        on left: 8 9
        on right: 6 8
    TYPE <nonterm> (37)
        on left: 10
        on right: 5 6 8 16 17
    BODY <nonterm> (38)
        on left: 11
        on right: 5
    DECLS <nonterm> (39)
        on left: 12 13
        on right: 11
    DECL_LIST <nonterm> (40)
        on left: 14 15
        on right: 12 14
    DECL <nonterm> (41)
        on left: 16 17
        on right: 12 14
    VARS <nonterm> (42)
        on left: 18 19 20
        on right: 16 17 18 19
    STMTS <nonterm> (43)
        on left: 21 22
        on right: 11 21 30
    STMT <nonterm> (44)
        on left: 23 24 25 26 27 28 29
        on right: 21 25 26
    BLOCK <nonterm> (45)
        on left: 30
        on right: 28
    ASSIGN <nonterm> (46)
        on left: 31
        on right: 23
    LOCATION <nonterm> (47)
        on left: 32
        on right: 31 51
    METHOD <nonterm> (48)
        on left: 33
        on right: 55
    EXPR <nonterm> (49)
        on left: 34 35
        on right: 17 19 24 25 26 31 50 56 58
    RELOP <nonterm> (50)
        on left: 36 37 38 39 40 41
        on right: 34
    ADD_EXPR <nonterm> (51)
        on left: 42 43
        on right: 34 35 42
    ADDOP <nonterm> (52)
        on left: 44 45
        on right: 42
    TERM <nonterm> (53)
        on left: 46 47
        on right: 42 43 46
    MULOP <nonterm> (54)
        on left: 48 49
        on right: 46
    FACTOR <nonterm> (55)
        on left: 50 51 52 53 54 55
        on right: 46 47
    ACTUALS <nonterm> (56)
        on left: 56 57
        on right: 55
    ARGS <nonterm> (57)
        on left: 58 59
        on right: 56 58


State 0

    0 $accept: . PROGRAM $end

    INT  shift, and go to state 1

    $default  reduce using rule 2 (PROGRAM)

    PROGRAM    go to state 2
    METH_LIST  go to state 3
    METH       go to state 4
    TYPE       go to state 5


State 1

   10 TYPE: INT .

    $default  reduce using rule 10 (TYPE)


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


State 3

    1 PROGRAM: METH_LIST .

    $default  reduce using rule 1 (PROGRAM)


State 4

    3 METH_LIST: METH . METH_LIST
    4          | METH .

    INT  shift, and go to state 1

    $default  reduce using rule 4 (METH_LIST)

    METH_LIST  go to state 7
    METH       go to state 4
    TYPE       go to state 5


State 5

    5 METH: TYPE . ID '(' PARAMS ')' BODY

    ID  shift, and go to state 8


State 6

    0 $accept: PROGRAM $end .

    $default  accept


State 7

    3 METH_LIST: METH METH_LIST .

    $default  reduce using rule 3 (METH_LIST)


State 8

    5 METH: TYPE ID . '(' PARAMS ')' BODY

    '('  shift, and go to state 9


State 9

    5 METH: TYPE ID '(' . PARAMS ')' BODY

    INT       reduce using rule 9 (FORMALS)
    $default  reduce using rule 7 (PARAMS)

    PARAMS   go to state 10
    FORMALS  go to state 11


State 10

    5 METH: TYPE ID '(' PARAMS . ')' BODY

    ')'  shift, and go to state 12


State 11

    6 PARAMS: FORMALS . TYPE ID
    8 FORMALS: FORMALS . TYPE ID ','

    INT  shift, and go to state 1

    TYPE  go to state 13


State 12

    5 METH: TYPE ID '(' PARAMS ')' . BODY

    '{'  shift, and go to state 14

    BODY  go to state 15


State 13

    6 PARAMS: FORMALS TYPE . ID
    8 FORMALS: FORMALS TYPE . ID ','

    ID  shift, and go to state 16


State 14

   11 BODY: '{' . DECLS STMTS '}'

    INT       reduce using rule 15 (DECL_LIST)
    $default  reduce using rule 13 (DECLS)

    DECLS      go to state 17
    DECL_LIST  go to state 18


State 15

    5 METH: TYPE ID '(' PARAMS ')' BODY .

    $default  reduce using rule 5 (METH)


State 16

    6 PARAMS: FORMALS TYPE ID .
    8 FORMALS: FORMALS TYPE ID . ','

    ','  shift, and go to state 19

    $default  reduce using rule 6 (PARAMS)


State 17

   11 BODY: '{' DECLS . STMTS '}'

    $default  reduce using rule 22 (STMTS)

    STMTS  go to state 20


State 18

   12 DECLS: DECL_LIST . DECL
   14 DECL_LIST: DECL_LIST . DECL

    INT  shift, and go to state 1

    TYPE  go to state 21
    DECL  go to state 22


State 19

    8 FORMALS: FORMALS TYPE ID ',' .

    $default  reduce using rule 8 (FORMALS)


State 20

   11 BODY: '{' DECLS STMTS . '}'
   21 STMTS: STMTS . STMT

    RETURN  shift, and go to state 23
    BREAK   shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    '{'     shift, and go to state 27
    '}'     shift, and go to state 28
    ';'     shift, and go to state 29
    ID      shift, and go to state 30

    STMT      go to state 31
    BLOCK     go to state 32
    ASSIGN    go to state 33
    LOCATION  go to state 34


State 21

   16 DECL: TYPE . ID VARS ';'
   17     | TYPE . ID '=' EXPR VARS ';'

    ID  shift, and go to state 35


State 22

   12 DECLS: DECL_LIST DECL .
   14 DECL_LIST: DECL_LIST DECL .

    INT       reduce using rule 14 (DECL_LIST)
    $default  reduce using rule 12 (DECLS)


State 23

   24 STMT: RETURN . EXPR ';'

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 43
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 24

   27 STMT: BREAK . ';'

    ';'  shift, and go to state 47


State 25

   25 STMT: IF . '(' EXPR ')' STMT ELSE STMT

    '('  shift, and go to state 48


State 26

   26 STMT: WHILE . '(' EXPR ')' STMT

    '('  shift, and go to state 49


State 27

   30 BLOCK: '{' . STMTS '}'

    $default  reduce using rule 22 (STMTS)

    STMTS  go to state 50


State 28

   11 BODY: '{' DECLS STMTS '}' .

    $default  reduce using rule 11 (BODY)


State 29

   29 STMT: ';' .

    $default  reduce using rule 29 (STMT)


State 30

   32 LOCATION: ID .

    $default  reduce using rule 32 (LOCATION)


State 31

   21 STMTS: STMTS STMT .

    $default  reduce using rule 21 (STMTS)


State 32

   28 STMT: BLOCK .

    $default  reduce using rule 28 (STMT)


State 33

   23 STMT: ASSIGN . ';'

    ';'  shift, and go to state 51


State 34

   31 ASSIGN: LOCATION . '=' EXPR

    '='  shift, and go to state 52


State 35

   16 DECL: TYPE ID . VARS ';'
   17     | TYPE ID . '=' EXPR VARS ';'

    ','  shift, and go to state 53
    '='  shift, and go to state 54

    $default  reduce using rule 20 (VARS)

    VARS  go to state 55


State 36

   53 FACTOR: TRUE .

    $default  reduce using rule 53 (FACTOR)


State 37

   54 FACTOR: FALSE .

    $default  reduce using rule 54 (FACTOR)


State 38

   50 FACTOR: '(' . EXPR ')'

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 56
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 39

   32 LOCATION: ID .
   33 METHOD: ID .

    '('       reduce using rule 33 (METHOD)
    $default  reduce using rule 32 (LOCATION)


State 40

   52 FACTOR: NUM .

    $default  reduce using rule 52 (FACTOR)


State 41

   51 FACTOR: LOCATION .

    $default  reduce using rule 51 (FACTOR)


State 42

   55 FACTOR: METHOD . '(' ACTUALS ')'

    '('  shift, and go to state 57


State 43

   24 STMT: RETURN EXPR . ';'

    ';'  shift, and go to state 58


State 44

   34 EXPR: ADD_EXPR . RELOP ADD_EXPR
   35     | ADD_EXPR .
   42 ADD_EXPR: ADD_EXPR . ADDOP TERM

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    GT   shift, and go to state 61
    LT   shift, and go to state 62
    GE   shift, and go to state 63
    LE   shift, and go to state 64
    EQ   shift, and go to state 65
    NE   shift, and go to state 66

    $default  reduce using rule 35 (EXPR)

    RELOP  go to state 67
    ADDOP  go to state 68


State 45

   43 ADD_EXPR: TERM .
   46 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 43 (ADD_EXPR)

    MULOP  go to state 71


State 46

   47 TERM: FACTOR .

    $default  reduce using rule 47 (TERM)


State 47

   27 STMT: BREAK ';' .

    $default  reduce using rule 27 (STMT)


State 48

   25 STMT: IF '(' . EXPR ')' STMT ELSE STMT

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 72
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 49

   26 STMT: WHILE '(' . EXPR ')' STMT

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 73
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 50

   21 STMTS: STMTS . STMT
   30 BLOCK: '{' STMTS . '}'

    RETURN  shift, and go to state 23
    BREAK   shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    '{'     shift, and go to state 27
    '}'     shift, and go to state 74
    ';'     shift, and go to state 29
    ID      shift, and go to state 30

    STMT      go to state 31
    BLOCK     go to state 32
    ASSIGN    go to state 33
    LOCATION  go to state 34


State 51

   23 STMT: ASSIGN ';' .

    $default  reduce using rule 23 (STMT)


State 52

   31 ASSIGN: LOCATION '=' . EXPR

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 75
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 53

   18 VARS: ',' . ID VARS
   19     | ',' . ID '=' EXPR VARS

    ID  shift, and go to state 76


State 54

   17 DECL: TYPE ID '=' . EXPR VARS ';'

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 77
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 55

   16 DECL: TYPE ID VARS . ';'

    ';'  shift, and go to state 78


State 56

   50 FACTOR: '(' EXPR . ')'

    ')'  shift, and go to state 79


State 57

   55 FACTOR: METHOD '(' . ACTUALS ')'

    ')'       reduce using rule 57 (ACTUALS)
    $default  reduce using rule 59 (ARGS)

    ACTUALS  go to state 80
    ARGS     go to state 81


State 58

   24 STMT: RETURN EXPR ';' .

    $default  reduce using rule 24 (STMT)


State 59

   44 ADDOP: '+' .

    $default  reduce using rule 44 (ADDOP)


State 60

   45 ADDOP: '-' .

    $default  reduce using rule 45 (ADDOP)


State 61

   38 RELOP: GT .

    $default  reduce using rule 38 (RELOP)


State 62

   37 RELOP: LT .

    $default  reduce using rule 37 (RELOP)


State 63

   39 RELOP: GE .

    $default  reduce using rule 39 (RELOP)


State 64

   36 RELOP: LE .

    $default  reduce using rule 36 (RELOP)


State 65

   40 RELOP: EQ .

    $default  reduce using rule 40 (RELOP)


State 66

   41 RELOP: NE .

    $default  reduce using rule 41 (RELOP)


State 67

   34 EXPR: ADD_EXPR RELOP . ADD_EXPR

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    ADD_EXPR  go to state 82
    TERM      go to state 45
    FACTOR    go to state 46


State 68

   42 ADD_EXPR: ADD_EXPR ADDOP . TERM

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    TERM      go to state 83
    FACTOR    go to state 46


State 69

   48 MULOP: '*' .

    $default  reduce using rule 48 (MULOP)


State 70

   49 MULOP: '/' .

    $default  reduce using rule 49 (MULOP)


State 71

   46 TERM: TERM MULOP . FACTOR

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    FACTOR    go to state 84


State 72

   25 STMT: IF '(' EXPR . ')' STMT ELSE STMT

    ')'  shift, and go to state 85


State 73

   26 STMT: WHILE '(' EXPR . ')' STMT

    ')'  shift, and go to state 86


State 74

   30 BLOCK: '{' STMTS '}' .

    $default  reduce using rule 30 (BLOCK)


State 75

   31 ASSIGN: LOCATION '=' EXPR .

    $default  reduce using rule 31 (ASSIGN)


State 76

   18 VARS: ',' ID . VARS
   19     | ',' ID . '=' EXPR VARS

    ','  shift, and go to state 53
    '='  shift, and go to state 87

    $default  reduce using rule 20 (VARS)

    VARS  go to state 88


State 77

   17 DECL: TYPE ID '=' EXPR . VARS ';'

    ','  shift, and go to state 53

    $default  reduce using rule 20 (VARS)

    VARS  go to state 89


State 78

   16 DECL: TYPE ID VARS ';' .

    $default  reduce using rule 16 (DECL)


State 79

   50 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 50 (FACTOR)


State 80

   55 FACTOR: METHOD '(' ACTUALS . ')'

    ')'  shift, and go to state 90


State 81

   56 ACTUALS: ARGS . EXPR
   58 ARGS: ARGS . EXPR ','

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 91
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 82

   34 EXPR: ADD_EXPR RELOP ADD_EXPR .
   42 ADD_EXPR: ADD_EXPR . ADDOP TERM

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 34 (EXPR)

    ADDOP  go to state 68


State 83

   42 ADD_EXPR: ADD_EXPR ADDOP TERM .
   46 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 42 (ADD_EXPR)

    MULOP  go to state 71


State 84

   46 TERM: TERM MULOP FACTOR .

    $default  reduce using rule 46 (TERM)


State 85

   25 STMT: IF '(' EXPR ')' . STMT ELSE STMT

    RETURN  shift, and go to state 23
    BREAK   shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    '{'     shift, and go to state 27
    ';'     shift, and go to state 29
    ID      shift, and go to state 30

    STMT      go to state 92
    BLOCK     go to state 32
    ASSIGN    go to state 33
    LOCATION  go to state 34


State 86

   26 STMT: WHILE '(' EXPR ')' . STMT

    RETURN  shift, and go to state 23
    BREAK   shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    '{'     shift, and go to state 27
    ';'     shift, and go to state 29
    ID      shift, and go to state 30

    STMT      go to state 93
    BLOCK     go to state 32
    ASSIGN    go to state 33
    LOCATION  go to state 34


State 87

   19 VARS: ',' ID '=' . EXPR VARS

    TRUE   shift, and go to state 36
    FALSE  shift, and go to state 37
    '('    shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40

    LOCATION  go to state 41
    METHOD    go to state 42
    EXPR      go to state 94
    ADD_EXPR  go to state 44
    TERM      go to state 45
    FACTOR    go to state 46


State 88

   18 VARS: ',' ID VARS .

    $default  reduce using rule 18 (VARS)


State 89

   17 DECL: TYPE ID '=' EXPR VARS . ';'

    ';'  shift, and go to state 95


State 90

   55 FACTOR: METHOD '(' ACTUALS ')' .

    $default  reduce using rule 55 (FACTOR)


State 91

   56 ACTUALS: ARGS EXPR .
   58 ARGS: ARGS EXPR . ','

    ','  shift, and go to state 96

    $default  reduce using rule 56 (ACTUALS)


State 92

   25 STMT: IF '(' EXPR ')' STMT . ELSE STMT

    ELSE  shift, and go to state 97


State 93

   26 STMT: WHILE '(' EXPR ')' STMT .

    $default  reduce using rule 26 (STMT)


State 94

   19 VARS: ',' ID '=' EXPR . VARS

    ','  shift, and go to state 53

    $default  reduce using rule 20 (VARS)

    VARS  go to state 98


State 95

   17 DECL: TYPE ID '=' EXPR VARS ';' .

    $default  reduce using rule 17 (DECL)


State 96

   58 ARGS: ARGS EXPR ',' .

    $default  reduce using rule 58 (ARGS)


State 97

   25 STMT: IF '(' EXPR ')' STMT ELSE . STMT

    RETURN  shift, and go to state 23
    BREAK   shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    '{'     shift, and go to state 27
    ';'     shift, and go to state 29
    ID      shift, and go to state 30

    STMT      go to state 99
    BLOCK     go to state 32
    ASSIGN    go to state 33
    LOCATION  go to state 34


State 98

   19 VARS: ',' ID '=' EXPR VARS .

    $default  reduce using rule 19 (VARS)


State 99

   25 STMT: IF '(' EXPR ')' STMT ELSE STMT .

    $default  reduce using rule 25 (STMT)
