Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: METH_LIST
    2        | %empty

    3 METH_LIST: METH METH_LIST
    4          | METH
    5          | DECL ';'
    6          | error ';'

    7 $@1: %empty

    8 $@2: %empty

    9 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY

   10 PARAMS: FORMALS TYPE ID
   11       | %empty
   12       | error ')'

   13 FORMALS: FORMALS TYPE ID ','
   14        | %empty

   15 TYPE: INT

   16 BODY: '{' DECLS STMTS '}'

   17 DECLS: DECL_LIST DECL
   18      | %empty

   19 DECL_LIST: DECL_LIST DECL
   20          | %empty

   21 DECL: TYPE ID VARS ';'
   22     | TYPE ID '=' EXPR VARS ';'
   23     | TYPE error ';'

   24 VARS: ',' ID VARS
   25     | ',' ID '=' EXPR VARS
   26     | %empty

   27 STMTS: STMTS STMT
   28      | %empty

   29 STMT: ASSIGN ';'
   30     | RETURN EXPR ';'
   31     | IF '(' EXPR ')' STMT ELSE STMT

   32 $@3: %empty

   33 STMT: WHILE '(' EXPR ')' $@3 STMT
   34     | BREAK ';'
   35     | BLOCK
   36     | ';'
   37     | error ';'

   38 BLOCK: '{' STMTS '}'

   39 ASSIGN: LOCATION '=' EXPR

   40 LOCATION: ID

   41 METHOD: ID

   42 EXPR: ADD_EXPR RELOP ADD_EXPR
   43     | ADD_EXPR

   44 RELOP: LE
   45      | LT
   46      | GT
   47      | GE
   48      | EQ
   49      | NE

   50 ADD_EXPR: ADD_EXPR ADDOP TERM
   51         | TERM

   52 ADDOP: '+'
   53      | '-'

   54 TERM: TERM MULOP FACTOR
   55     | FACTOR

   56 MULOP: '*'
   57      | '/'

   58 FACTOR: '(' EXPR ')'
   59       | LOCATION
   60       | NUM
   61       | TRUE
   62       | FALSE
   63       | METHOD '(' ACTUALS ')'

   64 ACTUALS: ARGS EXPR
   65        | %empty

   66 ARGS: ARGS EXPR ','
   67     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 31 33 58 63
    ')' (41) 9 12 31 33 58 63
    '*' (42) 56
    '+' (43) 52
    ',' (44) 13 24 25 66
    '-' (45) 53
    '/' (47) 57
    ';' (59) 5 6 21 22 23 29 30 34 36 37
    '=' (61) 22 25 39
    '{' (123) 16 38
    '}' (125) 16 38
    error (256) 6 12 23 37
    RETURN <yint> (258) 30
    BREAK <yint> (259) 34
    ELSE <yint> (260) 31
    IF <yint> (261) 31
    INT <yint> (262) 15
    WHILE <yint> (263) 33
    TRUE <yint> (264) 61
    FALSE <yint> (265) 62
    GT <yint> (266) 46
    LT <yint> (267) 45
    GE <yint> (268) 47
    LE <yint> (269) 44
    EQ <yint> (270) 48
    NE <yint> (271) 49
    ID <ystr> (272) 9 10 13 21 22 24 25 40 41
    NUM <yint> (273) 60


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    PROGRAM <stnode> (31)
        on left: 1 2
        on right: 0
    METH_LIST <stnode> (32)
        on left: 3 4 5 6
        on right: 1 3
    METH <stnode> (33)
        on left: 9
        on right: 3 4
    $@1 (34)
        on left: 7
        on right: 9
    $@2 (35)
        on left: 8
        on right: 9
    PARAMS <stnode> (36)
        on left: 10 11 12
        on right: 9
    FORMALS <stnode> (37)
        on left: 13 14
        on right: 10 13
    TYPE <stnode> (38)
        on left: 15
        on right: 9 10 13 21 22 23
    BODY <stnode> (39)
        on left: 16
        on right: 9
    DECLS <stnode> (40)
        on left: 17 18
        on right: 16
    DECL_LIST <stnode> (41)
        on left: 19 20
        on right: 17 19
    DECL <stnode> (42)
        on left: 21 22 23
        on right: 5 17 19
    VARS <stnode> (43)
        on left: 24 25 26
        on right: 21 22 24 25
    STMTS <stnode> (44)
        on left: 27 28
        on right: 16 27 38
    STMT <stnode> (45)
        on left: 29 30 31 33 34 35 36 37
        on right: 27 31 33
    $@3 (46)
        on left: 32
        on right: 33
    BLOCK <stnode> (47)
        on left: 38
        on right: 35
    ASSIGN <stnode> (48)
        on left: 39
        on right: 29
    LOCATION <stnode> (49)
        on left: 40
        on right: 39 59
    METHOD <stnode> (50)
        on left: 41
        on right: 63
    EXPR <stnode> (51)
        on left: 42 43
        on right: 22 25 30 31 33 39 58 64 66
    RELOP <stnode> (52)
        on left: 44 45 46 47 48 49
        on right: 42
    ADD_EXPR <stnode> (53)
        on left: 50 51
        on right: 42 43 50
    ADDOP <stnode> (54)
        on left: 52 53
        on right: 50
    TERM <stnode> (55)
        on left: 54 55
        on right: 50 51 54
    MULOP <stnode> (56)
        on left: 56 57
        on right: 54
    FACTOR <stnode> (57)
        on left: 58 59 60 61 62 63
        on right: 54 55
    ACTUALS <stnode> (58)
        on left: 64 65
        on right: 63
    ARGS <stnode> (59)
        on left: 66 67
        on right: 64 66


State 0

    0 $accept: . PROGRAM $end

    error  shift, and go to state 1
    INT    shift, and go to state 2

    $end  reduce using rule 2 (PROGRAM)

    PROGRAM    go to state 3
    METH_LIST  go to state 4
    METH       go to state 5
    TYPE       go to state 6
    DECL       go to state 7


State 1

    6 METH_LIST: error . ';'

    ';'  shift, and go to state 8


State 2

   15 TYPE: INT .

    $default  reduce using rule 15 (TYPE)


State 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 9


State 4

    1 PROGRAM: METH_LIST .

    $default  reduce using rule 1 (PROGRAM)


State 5

    3 METH_LIST: METH . METH_LIST
    4          | METH .

    error  shift, and go to state 1
    INT    shift, and go to state 2

    $end  reduce using rule 4 (METH_LIST)

    METH_LIST  go to state 10
    METH       go to state 5
    TYPE       go to state 6
    DECL       go to state 7


State 6

    9 METH: TYPE . ID $@1 '(' PARAMS ')' $@2 BODY
   21 DECL: TYPE . ID VARS ';'
   22     | TYPE . ID '=' EXPR VARS ';'
   23     | TYPE . error ';'

    error  shift, and go to state 11
    ID     shift, and go to state 12


State 7

    5 METH_LIST: DECL . ';'

    ';'  shift, and go to state 13


State 8

    6 METH_LIST: error ';' .

    $default  reduce using rule 6 (METH_LIST)


State 9

    0 $accept: PROGRAM $end .

    $default  accept


State 10

    3 METH_LIST: METH METH_LIST .

    $default  reduce using rule 3 (METH_LIST)


State 11

   23 DECL: TYPE error . ';'

    ';'  shift, and go to state 14


State 12

    9 METH: TYPE ID . $@1 '(' PARAMS ')' $@2 BODY
   21 DECL: TYPE ID . VARS ';'
   22     | TYPE ID . '=' EXPR VARS ';'

    ','  shift, and go to state 15
    '='  shift, and go to state 16

    ';'       reduce using rule 26 (VARS)
    $default  reduce using rule 7 ($@1)

    $@1   go to state 17
    VARS  go to state 18


State 13

    5 METH_LIST: DECL ';' .

    $default  reduce using rule 5 (METH_LIST)


State 14

   23 DECL: TYPE error ';' .

    $default  reduce using rule 23 (DECL)


State 15

   24 VARS: ',' . ID VARS
   25     | ',' . ID '=' EXPR VARS

    ID  shift, and go to state 19


State 16

   22 DECL: TYPE ID '=' . EXPR VARS ';'

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 27
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 17

    9 METH: TYPE ID $@1 . '(' PARAMS ')' $@2 BODY

    '('  shift, and go to state 31


State 18

   21 DECL: TYPE ID VARS . ';'

    ';'  shift, and go to state 32


State 19

   24 VARS: ',' ID . VARS
   25     | ',' ID . '=' EXPR VARS

    ','  shift, and go to state 15
    '='  shift, and go to state 33

    $default  reduce using rule 26 (VARS)

    VARS  go to state 34


State 20

   61 FACTOR: TRUE .

    $default  reduce using rule 61 (FACTOR)


State 21

   62 FACTOR: FALSE .

    $default  reduce using rule 62 (FACTOR)


State 22

   40 LOCATION: ID .
   41 METHOD: ID .

    '('       reduce using rule 41 (METHOD)
    $default  reduce using rule 40 (LOCATION)


State 23

   60 FACTOR: NUM .

    $default  reduce using rule 60 (FACTOR)


State 24

   58 FACTOR: '(' . EXPR ')'

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 35
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 25

   59 FACTOR: LOCATION .

    $default  reduce using rule 59 (FACTOR)


State 26

   63 FACTOR: METHOD . '(' ACTUALS ')'

    '('  shift, and go to state 36


State 27

   22 DECL: TYPE ID '=' EXPR . VARS ';'

    ','  shift, and go to state 15

    $default  reduce using rule 26 (VARS)

    VARS  go to state 37


State 28

   42 EXPR: ADD_EXPR . RELOP ADD_EXPR
   43     | ADD_EXPR .
   50 ADD_EXPR: ADD_EXPR . ADDOP TERM

    GT   shift, and go to state 38
    LT   shift, and go to state 39
    GE   shift, and go to state 40
    LE   shift, and go to state 41
    EQ   shift, and go to state 42
    NE   shift, and go to state 43
    '+'  shift, and go to state 44
    '-'  shift, and go to state 45

    $default  reduce using rule 43 (EXPR)

    RELOP  go to state 46
    ADDOP  go to state 47


State 29

   51 ADD_EXPR: TERM .
   54 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 51 (ADD_EXPR)

    MULOP  go to state 50


State 30

   55 TERM: FACTOR .

    $default  reduce using rule 55 (TERM)


State 31

    9 METH: TYPE ID $@1 '(' . PARAMS ')' $@2 BODY

    error  shift, and go to state 51

    INT  reduce using rule 14 (FORMALS)
    ')'  reduce using rule 11 (PARAMS)

    PARAMS   go to state 52
    FORMALS  go to state 53


State 32

   21 DECL: TYPE ID VARS ';' .

    $default  reduce using rule 21 (DECL)


State 33

   25 VARS: ',' ID '=' . EXPR VARS

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 54
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 34

   24 VARS: ',' ID VARS .

    $default  reduce using rule 24 (VARS)


State 35

   58 FACTOR: '(' EXPR . ')'

    ')'  shift, and go to state 55


State 36

   63 FACTOR: METHOD '(' . ACTUALS ')'

    ')'       reduce using rule 65 (ACTUALS)
    $default  reduce using rule 67 (ARGS)

    ACTUALS  go to state 56
    ARGS     go to state 57


State 37

   22 DECL: TYPE ID '=' EXPR VARS . ';'

    ';'  shift, and go to state 58


State 38

   46 RELOP: GT .

    $default  reduce using rule 46 (RELOP)


State 39

   45 RELOP: LT .

    $default  reduce using rule 45 (RELOP)


State 40

   47 RELOP: GE .

    $default  reduce using rule 47 (RELOP)


State 41

   44 RELOP: LE .

    $default  reduce using rule 44 (RELOP)


State 42

   48 RELOP: EQ .

    $default  reduce using rule 48 (RELOP)


State 43

   49 RELOP: NE .

    $default  reduce using rule 49 (RELOP)


State 44

   52 ADDOP: '+' .

    $default  reduce using rule 52 (ADDOP)


State 45

   53 ADDOP: '-' .

    $default  reduce using rule 53 (ADDOP)


State 46

   42 EXPR: ADD_EXPR RELOP . ADD_EXPR

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    ADD_EXPR  go to state 59
    TERM      go to state 29
    FACTOR    go to state 30


State 47

   50 ADD_EXPR: ADD_EXPR ADDOP . TERM

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    TERM      go to state 60
    FACTOR    go to state 30


State 48

   56 MULOP: '*' .

    $default  reduce using rule 56 (MULOP)


State 49

   57 MULOP: '/' .

    $default  reduce using rule 57 (MULOP)


State 50

   54 TERM: TERM MULOP . FACTOR

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    FACTOR    go to state 61


State 51

   12 PARAMS: error . ')'

    ')'  shift, and go to state 62


State 52

    9 METH: TYPE ID $@1 '(' PARAMS . ')' $@2 BODY

    ')'  shift, and go to state 63


State 53

   10 PARAMS: FORMALS . TYPE ID
   13 FORMALS: FORMALS . TYPE ID ','

    INT  shift, and go to state 2

    TYPE  go to state 64


State 54

   25 VARS: ',' ID '=' EXPR . VARS

    ','  shift, and go to state 15

    $default  reduce using rule 26 (VARS)

    VARS  go to state 65


State 55

   58 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 58 (FACTOR)


State 56

   63 FACTOR: METHOD '(' ACTUALS . ')'

    ')'  shift, and go to state 66


State 57

   64 ACTUALS: ARGS . EXPR
   66 ARGS: ARGS . EXPR ','

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 67
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 58

   22 DECL: TYPE ID '=' EXPR VARS ';' .

    $default  reduce using rule 22 (DECL)


State 59

   42 EXPR: ADD_EXPR RELOP ADD_EXPR .
   50 ADD_EXPR: ADD_EXPR . ADDOP TERM

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45

    $default  reduce using rule 42 (EXPR)

    ADDOP  go to state 47


State 60

   50 ADD_EXPR: ADD_EXPR ADDOP TERM .
   54 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 50 (ADD_EXPR)

    MULOP  go to state 50


State 61

   54 TERM: TERM MULOP FACTOR .

    $default  reduce using rule 54 (TERM)


State 62

   12 PARAMS: error ')' .

    $default  reduce using rule 12 (PARAMS)


State 63

    9 METH: TYPE ID $@1 '(' PARAMS ')' . $@2 BODY

    $default  reduce using rule 8 ($@2)

    $@2  go to state 68


State 64

   10 PARAMS: FORMALS TYPE . ID
   13 FORMALS: FORMALS TYPE . ID ','

    ID  shift, and go to state 69


State 65

   25 VARS: ',' ID '=' EXPR VARS .

    $default  reduce using rule 25 (VARS)


State 66

   63 FACTOR: METHOD '(' ACTUALS ')' .

    $default  reduce using rule 63 (FACTOR)


State 67

   64 ACTUALS: ARGS EXPR .
   66 ARGS: ARGS EXPR . ','

    ','  shift, and go to state 70

    $default  reduce using rule 64 (ACTUALS)


State 68

    9 METH: TYPE ID $@1 '(' PARAMS ')' $@2 . BODY

    '{'  shift, and go to state 71

    BODY  go to state 72


State 69

   10 PARAMS: FORMALS TYPE ID .
   13 FORMALS: FORMALS TYPE ID . ','

    ','  shift, and go to state 73

    $default  reduce using rule 10 (PARAMS)


State 70

   66 ARGS: ARGS EXPR ',' .

    $default  reduce using rule 66 (ARGS)


State 71

   16 BODY: '{' . DECLS STMTS '}'

    INT       reduce using rule 20 (DECL_LIST)
    $default  reduce using rule 18 (DECLS)

    DECLS      go to state 74
    DECL_LIST  go to state 75


State 72

    9 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY .

    $default  reduce using rule 9 (METH)


State 73

   13 FORMALS: FORMALS TYPE ID ',' .

    $default  reduce using rule 13 (FORMALS)


State 74

   16 BODY: '{' DECLS . STMTS '}'

    $default  reduce using rule 28 (STMTS)

    STMTS  go to state 76


State 75

   17 DECLS: DECL_LIST . DECL
   19 DECL_LIST: DECL_LIST . DECL

    INT  shift, and go to state 2

    TYPE  go to state 77
    DECL  go to state 78


State 76

   16 BODY: '{' DECLS STMTS . '}'
   27 STMTS: STMTS . STMT

    error   shift, and go to state 79
    RETURN  shift, and go to state 80
    BREAK   shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    ID      shift, and go to state 84
    ';'     shift, and go to state 85
    '{'     shift, and go to state 86
    '}'     shift, and go to state 87

    STMT      go to state 88
    BLOCK     go to state 89
    ASSIGN    go to state 90
    LOCATION  go to state 91


State 77

   21 DECL: TYPE . ID VARS ';'
   22     | TYPE . ID '=' EXPR VARS ';'
   23     | TYPE . error ';'

    error  shift, and go to state 11
    ID     shift, and go to state 92


State 78

   17 DECLS: DECL_LIST DECL .
   19 DECL_LIST: DECL_LIST DECL .

    INT       reduce using rule 19 (DECL_LIST)
    $default  reduce using rule 17 (DECLS)


State 79

   37 STMT: error . ';'

    ';'  shift, and go to state 93


State 80

   30 STMT: RETURN . EXPR ';'

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 94
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 81

   34 STMT: BREAK . ';'

    ';'  shift, and go to state 95


State 82

   31 STMT: IF . '(' EXPR ')' STMT ELSE STMT

    '('  shift, and go to state 96


State 83

   33 STMT: WHILE . '(' EXPR ')' $@3 STMT

    '('  shift, and go to state 97


State 84

   40 LOCATION: ID .

    $default  reduce using rule 40 (LOCATION)


State 85

   36 STMT: ';' .

    $default  reduce using rule 36 (STMT)


State 86

   38 BLOCK: '{' . STMTS '}'

    $default  reduce using rule 28 (STMTS)

    STMTS  go to state 98


State 87

   16 BODY: '{' DECLS STMTS '}' .

    $default  reduce using rule 16 (BODY)


State 88

   27 STMTS: STMTS STMT .

    $default  reduce using rule 27 (STMTS)


State 89

   35 STMT: BLOCK .

    $default  reduce using rule 35 (STMT)


State 90

   29 STMT: ASSIGN . ';'

    ';'  shift, and go to state 99


State 91

   39 ASSIGN: LOCATION . '=' EXPR

    '='  shift, and go to state 100


State 92

   21 DECL: TYPE ID . VARS ';'
   22     | TYPE ID . '=' EXPR VARS ';'

    ','  shift, and go to state 15
    '='  shift, and go to state 16

    $default  reduce using rule 26 (VARS)

    VARS  go to state 18


State 93

   37 STMT: error ';' .

    $default  reduce using rule 37 (STMT)


State 94

   30 STMT: RETURN EXPR . ';'

    ';'  shift, and go to state 101


State 95

   34 STMT: BREAK ';' .

    $default  reduce using rule 34 (STMT)


State 96

   31 STMT: IF '(' . EXPR ')' STMT ELSE STMT

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 102
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 97

   33 STMT: WHILE '(' . EXPR ')' $@3 STMT

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 103
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 98

   27 STMTS: STMTS . STMT
   38 BLOCK: '{' STMTS . '}'

    error   shift, and go to state 79
    RETURN  shift, and go to state 80
    BREAK   shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    ID      shift, and go to state 84
    ';'     shift, and go to state 85
    '{'     shift, and go to state 86
    '}'     shift, and go to state 104

    STMT      go to state 88
    BLOCK     go to state 89
    ASSIGN    go to state 90
    LOCATION  go to state 91


State 99

   29 STMT: ASSIGN ';' .

    $default  reduce using rule 29 (STMT)


State 100

   39 ASSIGN: LOCATION '=' . EXPR

    TRUE   shift, and go to state 20
    FALSE  shift, and go to state 21
    ID     shift, and go to state 22
    NUM    shift, and go to state 23
    '('    shift, and go to state 24

    LOCATION  go to state 25
    METHOD    go to state 26
    EXPR      go to state 105
    ADD_EXPR  go to state 28
    TERM      go to state 29
    FACTOR    go to state 30


State 101

   30 STMT: RETURN EXPR ';' .

    $default  reduce using rule 30 (STMT)


State 102

   31 STMT: IF '(' EXPR . ')' STMT ELSE STMT

    ')'  shift, and go to state 106


State 103

   33 STMT: WHILE '(' EXPR . ')' $@3 STMT

    ')'  shift, and go to state 107


State 104

   38 BLOCK: '{' STMTS '}' .

    $default  reduce using rule 38 (BLOCK)


State 105

   39 ASSIGN: LOCATION '=' EXPR .

    $default  reduce using rule 39 (ASSIGN)


State 106

   31 STMT: IF '(' EXPR ')' . STMT ELSE STMT

    error   shift, and go to state 79
    RETURN  shift, and go to state 80
    BREAK   shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    ID      shift, and go to state 84
    ';'     shift, and go to state 85
    '{'     shift, and go to state 86

    STMT      go to state 108
    BLOCK     go to state 89
    ASSIGN    go to state 90
    LOCATION  go to state 91


State 107

   33 STMT: WHILE '(' EXPR ')' . $@3 STMT

    $default  reduce using rule 32 ($@3)

    $@3  go to state 109


State 108

   31 STMT: IF '(' EXPR ')' STMT . ELSE STMT

    ELSE  shift, and go to state 110


State 109

   33 STMT: WHILE '(' EXPR ')' $@3 . STMT

    error   shift, and go to state 79
    RETURN  shift, and go to state 80
    BREAK   shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    ID      shift, and go to state 84
    ';'     shift, and go to state 85
    '{'     shift, and go to state 86

    STMT      go to state 111
    BLOCK     go to state 89
    ASSIGN    go to state 90
    LOCATION  go to state 91


State 110

   31 STMT: IF '(' EXPR ')' STMT ELSE . STMT

    error   shift, and go to state 79
    RETURN  shift, and go to state 80
    BREAK   shift, and go to state 81
    IF      shift, and go to state 82
    WHILE   shift, and go to state 83
    ID      shift, and go to state 84
    ';'     shift, and go to state 85
    '{'     shift, and go to state 86

    STMT      go to state 112
    BLOCK     go to state 89
    ASSIGN    go to state 90
    LOCATION  go to state 91


State 111

   33 STMT: WHILE '(' EXPR ')' $@3 STMT .

    $default  reduce using rule 33 (STMT)


State 112

   31 STMT: IF '(' EXPR ')' STMT ELSE STMT .

    $default  reduce using rule 31 (STMT)
