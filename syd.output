Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: METH_LIST

    2 METH_LIST: METH METH_LIST
    3          | METH

    4 $@1: %empty

    5 $@2: %empty

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY

    7 PARAMS: FORMALS TYPE ID
    8       | %empty
    9       | error ';'

   10 FORMALS: FORMALS TYPE ID ','
   11        | %empty

   12 TYPE: INT

   13 BODY: '{' DECLS STMTS '}'

   14 DECLS: DECL_LIST DECL
   15      | %empty

   16 DECL_LIST: DECL_LIST DECL
   17          | %empty

   18 DECL: TYPE ID VARS ';'
   19     | TYPE ID '=' EXPR VARS ';'

   20 VARS: ',' ID VARS
   21     | ',' ID '=' EXPR VARS
   22     | %empty

   23 STMTS: STMTS STMT
   24      | %empty
   25      | error ';'

   26 STMT: ASSIGN ';'
   27     | RETURN EXPR ';'
   28     | IF '(' EXPR ')' STMT ELSE STMT

   29 $@3: %empty

   30 STMT: WHILE '(' EXPR ')' $@3 STMT
   31     | BREAK ';'
   32     | BLOCK
   33     | ';'

   34 BLOCK: '{' STMTS '}'

   35 ASSIGN: LOCATION '=' EXPR

   36 LOCATION: ID

   37 METHOD: ID

   38 EXPR: ADD_EXPR RELOP ADD_EXPR
   39     | ADD_EXPR

   40 RELOP: LE
   41      | LT
   42      | GT
   43      | GE
   44      | EQ
   45      | NE

   46 ADD_EXPR: ADD_EXPR ADDOP TERM
   47         | TERM

   48 ADDOP: '+'
   49      | '-'

   50 TERM: TERM MULOP FACTOR
   51     | FACTOR

   52 MULOP: '*'
   53      | '/'

   54 FACTOR: '(' EXPR ')'
   55       | LOCATION
   56       | NUM
   57       | TRUE
   58       | FALSE
   59       | METHOD '(' ACTUALS ')'

   60 ACTUALS: ARGS EXPR
   61        | %empty

   62 ARGS: ARGS EXPR ','
   63     | %empty
   64     | error ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6 28 30 54 59
    ')' (41) 6 28 30 54 59 64
    '*' (42) 52
    '+' (43) 48
    ',' (44) 10 20 21 62
    '-' (45) 49
    '/' (47) 53
    ';' (59) 9 18 19 25 26 27 31 33
    '=' (61) 19 21 35
    '{' (123) 13 34
    '}' (125) 13 34
    error (256) 9 25 64
    RETURN <yint> (258) 27
    BREAK <yint> (259) 31
    ELSE <yint> (260) 28
    IF <yint> (261) 28
    INT <yint> (262) 12
    WHILE <yint> (263) 30
    TRUE <yint> (264) 57
    FALSE <yint> (265) 58
    GT <yint> (266) 42
    LT <yint> (267) 41
    GE <yint> (268) 43
    LE <yint> (269) 40
    EQ <yint> (270) 44
    NE <yint> (271) 45
    ID <ystr> (272) 6 7 10 18 19 20 21 36 37
    NUM <yint> (273) 56


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    PROGRAM <stnode> (31)
        on left: 1
        on right: 0
    METH_LIST <stnode> (32)
        on left: 2 3
        on right: 1 2
    METH <stnode> (33)
        on left: 6
        on right: 2 3
    $@1 (34)
        on left: 4
        on right: 6
    $@2 (35)
        on left: 5
        on right: 6
    PARAMS <stnode> (36)
        on left: 7 8 9
        on right: 6
    FORMALS <stnode> (37)
        on left: 10 11
        on right: 7 10
    TYPE <stnode> (38)
        on left: 12
        on right: 6 7 10 18 19
    BODY <stnode> (39)
        on left: 13
        on right: 6
    DECLS <stnode> (40)
        on left: 14 15
        on right: 13
    DECL_LIST <stnode> (41)
        on left: 16 17
        on right: 14 16
    DECL <stnode> (42)
        on left: 18 19
        on right: 14 16
    VARS <stnode> (43)
        on left: 20 21 22
        on right: 18 19 20 21
    STMTS <stnode> (44)
        on left: 23 24 25
        on right: 13 23 34
    STMT <stnode> (45)
        on left: 26 27 28 30 31 32 33
        on right: 23 28 30
    $@3 (46)
        on left: 29
        on right: 30
    BLOCK <stnode> (47)
        on left: 34
        on right: 32
    ASSIGN <stnode> (48)
        on left: 35
        on right: 26
    LOCATION <stnode> (49)
        on left: 36
        on right: 35 55
    METHOD <stnode> (50)
        on left: 37
        on right: 59
    EXPR <stnode> (51)
        on left: 38 39
        on right: 19 21 27 28 30 35 54 60 62
    RELOP <stnode> (52)
        on left: 40 41 42 43 44 45
        on right: 38
    ADD_EXPR <stnode> (53)
        on left: 46 47
        on right: 38 39 46
    ADDOP <stnode> (54)
        on left: 48 49
        on right: 46
    TERM <stnode> (55)
        on left: 50 51
        on right: 46 47 50
    MULOP <stnode> (56)
        on left: 52 53
        on right: 50
    FACTOR <stnode> (57)
        on left: 54 55 56 57 58 59
        on right: 50 51
    ACTUALS <stnode> (58)
        on left: 60 61
        on right: 59
    ARGS <stnode> (59)
        on left: 62 63 64
        on right: 60 62


State 0

    0 $accept: . PROGRAM $end

    INT  shift, and go to state 1

    PROGRAM    go to state 2
    METH_LIST  go to state 3
    METH       go to state 4
    TYPE       go to state 5


State 1

   12 TYPE: INT .

    $default  reduce using rule 12 (TYPE)


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


State 3

    1 PROGRAM: METH_LIST .

    $default  reduce using rule 1 (PROGRAM)


State 4

    2 METH_LIST: METH . METH_LIST
    3          | METH .

    INT  shift, and go to state 1

    $default  reduce using rule 3 (METH_LIST)

    METH_LIST  go to state 7
    METH       go to state 4
    TYPE       go to state 5


State 5

    6 METH: TYPE . ID $@1 '(' PARAMS ')' $@2 BODY

    ID  shift, and go to state 8


State 6

    0 $accept: PROGRAM $end .

    $default  accept


State 7

    2 METH_LIST: METH METH_LIST .

    $default  reduce using rule 2 (METH_LIST)


State 8

    6 METH: TYPE ID . $@1 '(' PARAMS ')' $@2 BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 METH: TYPE ID $@1 . '(' PARAMS ')' $@2 BODY

    '('  shift, and go to state 10


State 10

    6 METH: TYPE ID $@1 '(' . PARAMS ')' $@2 BODY

    error  shift, and go to state 11

    INT  reduce using rule 11 (FORMALS)
    ')'  reduce using rule 8 (PARAMS)

    PARAMS   go to state 12
    FORMALS  go to state 13


State 11

    9 PARAMS: error . ';'

    ';'  shift, and go to state 14


State 12

    6 METH: TYPE ID $@1 '(' PARAMS . ')' $@2 BODY

    ')'  shift, and go to state 15


State 13

    7 PARAMS: FORMALS . TYPE ID
   10 FORMALS: FORMALS . TYPE ID ','

    INT  shift, and go to state 1

    TYPE  go to state 16


State 14

    9 PARAMS: error ';' .

    $default  reduce using rule 9 (PARAMS)


State 15

    6 METH: TYPE ID $@1 '(' PARAMS ')' . $@2 BODY

    $default  reduce using rule 5 ($@2)

    $@2  go to state 17


State 16

    7 PARAMS: FORMALS TYPE . ID
   10 FORMALS: FORMALS TYPE . ID ','

    ID  shift, and go to state 18


State 17

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 . BODY

    '{'  shift, and go to state 19

    BODY  go to state 20


State 18

    7 PARAMS: FORMALS TYPE ID .
   10 FORMALS: FORMALS TYPE ID . ','

    ','  shift, and go to state 21

    $default  reduce using rule 7 (PARAMS)


State 19

   13 BODY: '{' . DECLS STMTS '}'

    INT       reduce using rule 17 (DECL_LIST)
    $default  reduce using rule 15 (DECLS)

    DECLS      go to state 22
    DECL_LIST  go to state 23


State 20

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY .

    $default  reduce using rule 6 (METH)


State 21

   10 FORMALS: FORMALS TYPE ID ',' .

    $default  reduce using rule 10 (FORMALS)


State 22

   13 BODY: '{' DECLS . STMTS '}'

    error  shift, and go to state 24

    RETURN  reduce using rule 24 (STMTS)
    BREAK   reduce using rule 24 (STMTS)
    IF      reduce using rule 24 (STMTS)
    WHILE   reduce using rule 24 (STMTS)
    ID      reduce using rule 24 (STMTS)
    ';'     reduce using rule 24 (STMTS)
    '{'     reduce using rule 24 (STMTS)
    '}'     reduce using rule 24 (STMTS)

    STMTS  go to state 25


State 23

   14 DECLS: DECL_LIST . DECL
   16 DECL_LIST: DECL_LIST . DECL

    INT  shift, and go to state 1

    TYPE  go to state 26
    DECL  go to state 27


State 24

   25 STMTS: error . ';'

    ';'  shift, and go to state 28


State 25

   13 BODY: '{' DECLS STMTS . '}'
   23 STMTS: STMTS . STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35
    '}'     shift, and go to state 36

    STMT      go to state 37
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 26

   18 DECL: TYPE . ID VARS ';'
   19     | TYPE . ID '=' EXPR VARS ';'

    ID  shift, and go to state 41


State 27

   14 DECLS: DECL_LIST DECL .
   16 DECL_LIST: DECL_LIST DECL .

    INT       reduce using rule 16 (DECL_LIST)
    $default  reduce using rule 14 (DECLS)


State 28

   25 STMTS: error ';' .

    $default  reduce using rule 25 (STMTS)


State 29

   27 STMT: RETURN . EXPR ';'

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 49
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 30

   31 STMT: BREAK . ';'

    ';'  shift, and go to state 53


State 31

   28 STMT: IF . '(' EXPR ')' STMT ELSE STMT

    '('  shift, and go to state 54


State 32

   30 STMT: WHILE . '(' EXPR ')' $@3 STMT

    '('  shift, and go to state 55


State 33

   36 LOCATION: ID .

    $default  reduce using rule 36 (LOCATION)


State 34

   33 STMT: ';' .

    $default  reduce using rule 33 (STMT)


State 35

   34 BLOCK: '{' . STMTS '}'

    error  shift, and go to state 24

    RETURN  reduce using rule 24 (STMTS)
    BREAK   reduce using rule 24 (STMTS)
    IF      reduce using rule 24 (STMTS)
    WHILE   reduce using rule 24 (STMTS)
    ID      reduce using rule 24 (STMTS)
    ';'     reduce using rule 24 (STMTS)
    '{'     reduce using rule 24 (STMTS)
    '}'     reduce using rule 24 (STMTS)

    STMTS  go to state 56


State 36

   13 BODY: '{' DECLS STMTS '}' .

    $default  reduce using rule 13 (BODY)


State 37

   23 STMTS: STMTS STMT .

    $default  reduce using rule 23 (STMTS)


State 38

   32 STMT: BLOCK .

    $default  reduce using rule 32 (STMT)


State 39

   26 STMT: ASSIGN . ';'

    ';'  shift, and go to state 57


State 40

   35 ASSIGN: LOCATION . '=' EXPR

    '='  shift, and go to state 58


State 41

   18 DECL: TYPE ID . VARS ';'
   19     | TYPE ID . '=' EXPR VARS ';'

    ','  shift, and go to state 59
    '='  shift, and go to state 60

    $default  reduce using rule 22 (VARS)

    VARS  go to state 61


State 42

   57 FACTOR: TRUE .

    $default  reduce using rule 57 (FACTOR)


State 43

   58 FACTOR: FALSE .

    $default  reduce using rule 58 (FACTOR)


State 44

   36 LOCATION: ID .
   37 METHOD: ID .

    '('       reduce using rule 37 (METHOD)
    $default  reduce using rule 36 (LOCATION)


State 45

   56 FACTOR: NUM .

    $default  reduce using rule 56 (FACTOR)


State 46

   54 FACTOR: '(' . EXPR ')'

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 62
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 47

   55 FACTOR: LOCATION .

    $default  reduce using rule 55 (FACTOR)


State 48

   59 FACTOR: METHOD . '(' ACTUALS ')'

    '('  shift, and go to state 63


State 49

   27 STMT: RETURN EXPR . ';'

    ';'  shift, and go to state 64


State 50

   38 EXPR: ADD_EXPR . RELOP ADD_EXPR
   39     | ADD_EXPR .
   46 ADD_EXPR: ADD_EXPR . ADDOP TERM

    GT   shift, and go to state 65
    LT   shift, and go to state 66
    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72

    $default  reduce using rule 39 (EXPR)

    RELOP  go to state 73
    ADDOP  go to state 74


State 51

   47 ADD_EXPR: TERM .
   50 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 47 (ADD_EXPR)

    MULOP  go to state 77


State 52

   51 TERM: FACTOR .

    $default  reduce using rule 51 (TERM)


State 53

   31 STMT: BREAK ';' .

    $default  reduce using rule 31 (STMT)


State 54

   28 STMT: IF '(' . EXPR ')' STMT ELSE STMT

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 78
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 55

   30 STMT: WHILE '(' . EXPR ')' $@3 STMT

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 79
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 56

   23 STMTS: STMTS . STMT
   34 BLOCK: '{' STMTS . '}'

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35
    '}'     shift, and go to state 80

    STMT      go to state 37
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 57

   26 STMT: ASSIGN ';' .

    $default  reduce using rule 26 (STMT)


State 58

   35 ASSIGN: LOCATION '=' . EXPR

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 81
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 59

   20 VARS: ',' . ID VARS
   21     | ',' . ID '=' EXPR VARS

    ID  shift, and go to state 82


State 60

   19 DECL: TYPE ID '=' . EXPR VARS ';'

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 83
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 61

   18 DECL: TYPE ID VARS . ';'

    ';'  shift, and go to state 84


State 62

   54 FACTOR: '(' EXPR . ')'

    ')'  shift, and go to state 85


State 63

   59 FACTOR: METHOD '(' . ACTUALS ')'

    error  shift, and go to state 86

    TRUE   reduce using rule 63 (ARGS)
    FALSE  reduce using rule 63 (ARGS)
    ID     reduce using rule 63 (ARGS)
    NUM    reduce using rule 63 (ARGS)
    '('    reduce using rule 63 (ARGS)
    ')'    reduce using rule 61 (ACTUALS)

    ACTUALS  go to state 87
    ARGS     go to state 88


State 64

   27 STMT: RETURN EXPR ';' .

    $default  reduce using rule 27 (STMT)


State 65

   42 RELOP: GT .

    $default  reduce using rule 42 (RELOP)


State 66

   41 RELOP: LT .

    $default  reduce using rule 41 (RELOP)


State 67

   43 RELOP: GE .

    $default  reduce using rule 43 (RELOP)


State 68

   40 RELOP: LE .

    $default  reduce using rule 40 (RELOP)


State 69

   44 RELOP: EQ .

    $default  reduce using rule 44 (RELOP)


State 70

   45 RELOP: NE .

    $default  reduce using rule 45 (RELOP)


State 71

   48 ADDOP: '+' .

    $default  reduce using rule 48 (ADDOP)


State 72

   49 ADDOP: '-' .

    $default  reduce using rule 49 (ADDOP)


State 73

   38 EXPR: ADD_EXPR RELOP . ADD_EXPR

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    ADD_EXPR  go to state 89
    TERM      go to state 51
    FACTOR    go to state 52


State 74

   46 ADD_EXPR: ADD_EXPR ADDOP . TERM

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    TERM      go to state 90
    FACTOR    go to state 52


State 75

   52 MULOP: '*' .

    $default  reduce using rule 52 (MULOP)


State 76

   53 MULOP: '/' .

    $default  reduce using rule 53 (MULOP)


State 77

   50 TERM: TERM MULOP . FACTOR

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    FACTOR    go to state 91


State 78

   28 STMT: IF '(' EXPR . ')' STMT ELSE STMT

    ')'  shift, and go to state 92


State 79

   30 STMT: WHILE '(' EXPR . ')' $@3 STMT

    ')'  shift, and go to state 93


State 80

   34 BLOCK: '{' STMTS '}' .

    $default  reduce using rule 34 (BLOCK)


State 81

   35 ASSIGN: LOCATION '=' EXPR .

    $default  reduce using rule 35 (ASSIGN)


State 82

   20 VARS: ',' ID . VARS
   21     | ',' ID . '=' EXPR VARS

    ','  shift, and go to state 59
    '='  shift, and go to state 94

    $default  reduce using rule 22 (VARS)

    VARS  go to state 95


State 83

   19 DECL: TYPE ID '=' EXPR . VARS ';'

    ','  shift, and go to state 59

    $default  reduce using rule 22 (VARS)

    VARS  go to state 96


State 84

   18 DECL: TYPE ID VARS ';' .

    $default  reduce using rule 18 (DECL)


State 85

   54 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 54 (FACTOR)


State 86

   64 ARGS: error . ')'

    ')'  shift, and go to state 97


State 87

   59 FACTOR: METHOD '(' ACTUALS . ')'

    ')'  shift, and go to state 98


State 88

   60 ACTUALS: ARGS . EXPR
   62 ARGS: ARGS . EXPR ','

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 99
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 89

   38 EXPR: ADD_EXPR RELOP ADD_EXPR .
   46 ADD_EXPR: ADD_EXPR . ADDOP TERM

    '+'  shift, and go to state 71
    '-'  shift, and go to state 72

    $default  reduce using rule 38 (EXPR)

    ADDOP  go to state 74


State 90

   46 ADD_EXPR: ADD_EXPR ADDOP TERM .
   50 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 46 (ADD_EXPR)

    MULOP  go to state 77


State 91

   50 TERM: TERM MULOP FACTOR .

    $default  reduce using rule 50 (TERM)


State 92

   28 STMT: IF '(' EXPR ')' . STMT ELSE STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35

    STMT      go to state 100
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 93

   30 STMT: WHILE '(' EXPR ')' . $@3 STMT

    $default  reduce using rule 29 ($@3)

    $@3  go to state 101


State 94

   21 VARS: ',' ID '=' . EXPR VARS

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 102
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 95

   20 VARS: ',' ID VARS .

    $default  reduce using rule 20 (VARS)


State 96

   19 DECL: TYPE ID '=' EXPR VARS . ';'

    ';'  shift, and go to state 103


State 97

   64 ARGS: error ')' .

    $default  reduce using rule 64 (ARGS)


State 98

   59 FACTOR: METHOD '(' ACTUALS ')' .

    $default  reduce using rule 59 (FACTOR)


State 99

   60 ACTUALS: ARGS EXPR .
   62 ARGS: ARGS EXPR . ','

    ','  shift, and go to state 104

    $default  reduce using rule 60 (ACTUALS)


State 100

   28 STMT: IF '(' EXPR ')' STMT . ELSE STMT

    ELSE  shift, and go to state 105


State 101

   30 STMT: WHILE '(' EXPR ')' $@3 . STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35

    STMT      go to state 106
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 102

   21 VARS: ',' ID '=' EXPR . VARS

    ','  shift, and go to state 59

    $default  reduce using rule 22 (VARS)

    VARS  go to state 107


State 103

   19 DECL: TYPE ID '=' EXPR VARS ';' .

    $default  reduce using rule 19 (DECL)


State 104

   62 ARGS: ARGS EXPR ',' .

    $default  reduce using rule 62 (ARGS)


State 105

   28 STMT: IF '(' EXPR ')' STMT ELSE . STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35

    STMT      go to state 108
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 106

   30 STMT: WHILE '(' EXPR ')' $@3 STMT .

    $default  reduce using rule 30 (STMT)


State 107

   21 VARS: ',' ID '=' EXPR VARS .

    $default  reduce using rule 21 (VARS)


State 108

   28 STMT: IF '(' EXPR ')' STMT ELSE STMT .

    $default  reduce using rule 28 (STMT)
