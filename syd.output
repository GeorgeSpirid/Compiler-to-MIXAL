
Grammar
rule 1    PROGRAM -> METH_LIST
rule 2    PROGRAM ->		/* empty */
rule 3    PROGRAM -> error
rule 4    METH_LIST -> METH METH_LIST
rule 5    METH_LIST -> METH
rule 6    METH_LIST -> DECL ';'
rule 7    METH_LIST -> STMT ';'
rule 8    METH_LIST -> error ';'
rule 9    @1 ->		/* empty */
rule 10   @2 ->		/* empty */
rule 11   METH -> TYPE ID @1 '(' PARAMS ')' @2 BODY
rule 12   PARAMS -> FORMALS TYPE ID
rule 13   PARAMS ->		/* empty */
rule 14   PARAMS -> error ')'
rule 15   FORMALS -> FORMALS TYPE ID ','
rule 16   FORMALS ->		/* empty */
rule 17   TYPE -> INT
rule 18   BODY -> '{' DECLS STMTS '}'
rule 19   DECLS -> DECL_LIST DECL
rule 20   DECLS ->		/* empty */
rule 21   DECL_LIST -> DECL_LIST DECL
rule 22   DECL_LIST ->		/* empty */
rule 23   DECL -> TYPE ID VARS ';'
rule 24   DECL -> TYPE ID '=' EXPR VARS ';'
rule 25   DECL -> TYPE error ';'
rule 26   VARS -> ',' ID VARS
rule 27   VARS -> ',' ID '=' EXPR VARS
rule 28   VARS ->		/* empty */
rule 29   STMTS -> STMTS STMT
rule 30   STMTS ->		/* empty */
rule 31   STMT -> ASSIGN ';'
rule 32   STMT -> RETURN EXPR ';'
rule 33   STMT -> IF '(' EXPR ')' STMT ELSE STMT
rule 34   @3 ->		/* empty */
rule 35   STMT -> WHILE '(' EXPR ')' @3 STMT
rule 36   STMT -> BREAK ';'
rule 37   STMT -> BLOCK
rule 38   STMT -> ';'
rule 39   STMT -> error ';'
rule 40   BLOCK -> '{' STMTS '}'
rule 41   ASSIGN -> LOCATION '=' EXPR
rule 42   LOCATION -> ID
rule 43   METHOD -> ID
rule 44   EXPR -> ADD_EXPR RELOP ADD_EXPR
rule 45   EXPR -> ADD_EXPR
rule 46   RELOP -> LE
rule 47   RELOP -> LT
rule 48   RELOP -> GT
rule 49   RELOP -> GE
rule 50   RELOP -> EQ
rule 51   RELOP -> NE
rule 52   ADD_EXPR -> ADD_EXPR ADDOP TERM
rule 53   ADD_EXPR -> TERM
rule 54   ADDOP -> '+'
rule 55   ADDOP -> '-'
rule 56   TERM -> TERM MULOP FACTOR
rule 57   TERM -> FACTOR
rule 58   MULOP -> '*'
rule 59   MULOP -> '/'
rule 60   FACTOR -> '(' EXPR ')'
rule 61   FACTOR -> LOCATION
rule 62   FACTOR -> NUM
rule 63   FACTOR -> TRUE
rule 64   FACTOR -> FALSE
rule 65   FACTOR -> METHOD '(' ACTUALS ')'
rule 66   ACTUALS -> ARGS EXPR
rule 67   ACTUALS ->		/* empty */
rule 68   ARGS -> ARGS EXPR ','
rule 69   ARGS ->		/* empty */

Terminals, with rules where they appear

$ (-1)
'(' (40) 11 33 35 60 65
')' (41) 11 14 33 35 60 65
'*' (42) 58
'+' (43) 54
',' (44) 15 26 27 68
'-' (45) 55
'/' (47) 59
';' (59) 6 7 8 23 24 25 31 32 36 38 39
'=' (61) 24 27 41
'{' (123) 18 40
'}' (125) 18 40
error (256) 3 8 14 25 39
RETURN (258) 32
BREAK (259) 36
ELSE (260) 33
IF (261) 33
INT (262) 17
WHILE (263) 35
TRUE (264) 63
FALSE (265) 64
GT (266) 48
LT (267) 47
GE (268) 49
LE (269) 46
EQ (270) 50
NE (271) 51
ID (272) 11 12 15 23 24 26 27 42 43
NUM (273) 62

Nonterminals, with rules where they appear

PROGRAM (30)
    on left: 1 2 3
METH_LIST (31)
    on left: 4 5 6 7 8, on right: 1 4
METH (32)
    on left: 11, on right: 4 5
@1 (33)
    on left: 9, on right: 11
@2 (34)
    on left: 10, on right: 11
PARAMS (35)
    on left: 12 13 14, on right: 11
FORMALS (36)
    on left: 15 16, on right: 12 15
TYPE (37)
    on left: 17, on right: 11 12 15 23 24 25
BODY (38)
    on left: 18, on right: 11
DECLS (39)
    on left: 19 20, on right: 18
DECL_LIST (40)
    on left: 21 22, on right: 19 21
DECL (41)
    on left: 23 24 25, on right: 6 19 21
VARS (42)
    on left: 26 27 28, on right: 23 24 26 27
STMTS (43)
    on left: 29 30, on right: 18 29 40
STMT (44)
    on left: 31 32 33 35 36 37 38 39, on right: 7 29 33 35
@3 (45)
    on left: 34, on right: 35
BLOCK (46)
    on left: 40, on right: 37
ASSIGN (47)
    on left: 41, on right: 31
LOCATION (48)
    on left: 42, on right: 41 61
METHOD (49)
    on left: 43, on right: 65
EXPR (50)
    on left: 44 45, on right: 24 27 32 33 35 41 60 66 68
RELOP (51)
    on left: 46 47 48 49 50 51, on right: 44
ADD_EXPR (52)
    on left: 52 53, on right: 44 45 52
ADDOP (53)
    on left: 54 55, on right: 52
TERM (54)
    on left: 56 57, on right: 52 53 56
MULOP (55)
    on left: 58 59, on right: 56
FACTOR (56)
    on left: 60 61 62 63 64 65, on right: 56 57
ACTUALS (57)
    on left: 66 67, on right: 65
ARGS (58)
    on left: 68 69, on right: 66 68


state 0

    error	shift, and go to state 1
    RETURN	shift, and go to state 2
    BREAK	shift, and go to state 3
    IF  	shift, and go to state 4
    INT 	shift, and go to state 5
    WHILE	shift, and go to state 6
    ID  	shift, and go to state 7
    ';' 	shift, and go to state 8
    '{' 	shift, and go to state 9

    $   	reduce using rule 2 (PROGRAM)

    PROGRAM	go to state 114
    METH_LIST	go to state 10
    METH	go to state 11
    TYPE	go to state 12
    DECL	go to state 13
    STMT	go to state 14
    BLOCK	go to state 15
    ASSIGN	go to state 16
    LOCATION	go to state 17



state 1

    PROGRAM  ->  error .   (rule 3)
    METH_LIST  ->  error . ';'   (rule 8)
    STMT  ->  error . ';'   (rule 39)

    ';' 	shift, and go to state 18

    $default	reduce using rule 3 (PROGRAM)



state 2

    STMT  ->  RETURN . EXPR ';'   (rule 32)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 26
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 3

    STMT  ->  BREAK . ';'   (rule 36)

    ';' 	shift, and go to state 30



state 4

    STMT  ->  IF . '(' EXPR ')' STMT ELSE STMT   (rule 33)

    '(' 	shift, and go to state 31



state 5

    TYPE  ->  INT .   (rule 17)

    $default	reduce using rule 17 (TYPE)



state 6

    STMT  ->  WHILE . '(' EXPR ')' @3 STMT   (rule 35)

    '(' 	shift, and go to state 32



state 7

    LOCATION  ->  ID .   (rule 42)

    $default	reduce using rule 42 (LOCATION)



state 8

    STMT  ->  ';' .   (rule 38)

    $default	reduce using rule 38 (STMT)



state 9

    BLOCK  ->  '{' . STMTS '}'   (rule 40)

    $default	reduce using rule 30 (STMTS)

    STMTS	go to state 33



state 10

    PROGRAM  ->  METH_LIST .   (rule 1)

    $default	reduce using rule 1 (PROGRAM)



state 11

    METH_LIST  ->  METH . METH_LIST   (rule 4)
    METH_LIST  ->  METH .   (rule 5)

    error	shift, and go to state 34
    RETURN	shift, and go to state 2
    BREAK	shift, and go to state 3
    IF  	shift, and go to state 4
    INT 	shift, and go to state 5
    WHILE	shift, and go to state 6
    ID  	shift, and go to state 7
    ';' 	shift, and go to state 8
    '{' 	shift, and go to state 9

    $   	reduce using rule 5 (METH_LIST)

    METH_LIST	go to state 35
    METH	go to state 11
    TYPE	go to state 12
    DECL	go to state 13
    STMT	go to state 14
    BLOCK	go to state 15
    ASSIGN	go to state 16
    LOCATION	go to state 17



state 12

    METH  ->  TYPE . ID @1 '(' PARAMS ')' @2 BODY   (rule 11)
    DECL  ->  TYPE . ID VARS ';'   (rule 23)
    DECL  ->  TYPE . ID '=' EXPR VARS ';'   (rule 24)
    DECL  ->  TYPE . error ';'   (rule 25)

    error	shift, and go to state 36
    ID  	shift, and go to state 37



state 13

    METH_LIST  ->  DECL . ';'   (rule 6)

    ';' 	shift, and go to state 38



state 14

    METH_LIST  ->  STMT . ';'   (rule 7)

    ';' 	shift, and go to state 39



state 15

    STMT  ->  BLOCK .   (rule 37)

    $default	reduce using rule 37 (STMT)



state 16

    STMT  ->  ASSIGN . ';'   (rule 31)

    ';' 	shift, and go to state 40



state 17

    ASSIGN  ->  LOCATION . '=' EXPR   (rule 41)

    '=' 	shift, and go to state 41



state 18

    METH_LIST  ->  error ';' .   (rule 8)
    STMT  ->  error ';' .   (rule 39)

    ';' 	reduce using rule 39 (STMT)
    $default	reduce using rule 8 (METH_LIST)



state 19

    FACTOR  ->  TRUE .   (rule 63)

    $default	reduce using rule 63 (FACTOR)



state 20

    FACTOR  ->  FALSE .   (rule 64)

    $default	reduce using rule 64 (FACTOR)



state 21

    LOCATION  ->  ID .   (rule 42)
    METHOD  ->  ID .   (rule 43)

    '(' 	reduce using rule 43 (METHOD)
    $default	reduce using rule 42 (LOCATION)



state 22

    FACTOR  ->  NUM .   (rule 62)

    $default	reduce using rule 62 (FACTOR)



state 23

    FACTOR  ->  '(' . EXPR ')'   (rule 60)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 42
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 24

    FACTOR  ->  LOCATION .   (rule 61)

    $default	reduce using rule 61 (FACTOR)



state 25

    FACTOR  ->  METHOD . '(' ACTUALS ')'   (rule 65)

    '(' 	shift, and go to state 43



state 26

    STMT  ->  RETURN EXPR . ';'   (rule 32)

    ';' 	shift, and go to state 44



state 27

    EXPR  ->  ADD_EXPR . RELOP ADD_EXPR   (rule 44)
    EXPR  ->  ADD_EXPR .   (rule 45)
    ADD_EXPR  ->  ADD_EXPR . ADDOP TERM   (rule 52)

    GT  	shift, and go to state 45
    LT  	shift, and go to state 46
    GE  	shift, and go to state 47
    LE  	shift, and go to state 48
    EQ  	shift, and go to state 49
    NE  	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52

    $default	reduce using rule 45 (EXPR)

    RELOP	go to state 53
    ADDOP	go to state 54



state 28

    ADD_EXPR  ->  TERM .   (rule 53)
    TERM  ->  TERM . MULOP FACTOR   (rule 56)

    '*' 	shift, and go to state 55
    '/' 	shift, and go to state 56

    $default	reduce using rule 53 (ADD_EXPR)

    MULOP	go to state 57



state 29

    TERM  ->  FACTOR .   (rule 57)

    $default	reduce using rule 57 (TERM)



state 30

    STMT  ->  BREAK ';' .   (rule 36)

    $default	reduce using rule 36 (STMT)



state 31

    STMT  ->  IF '(' . EXPR ')' STMT ELSE STMT   (rule 33)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 58
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 32

    STMT  ->  WHILE '(' . EXPR ')' @3 STMT   (rule 35)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 59
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 33

    STMTS  ->  STMTS . STMT   (rule 29)
    BLOCK  ->  '{' STMTS . '}'   (rule 40)

    error	shift, and go to state 60
    RETURN	shift, and go to state 2
    BREAK	shift, and go to state 3
    IF  	shift, and go to state 4
    WHILE	shift, and go to state 6
    ID  	shift, and go to state 7
    ';' 	shift, and go to state 8
    '{' 	shift, and go to state 9
    '}' 	shift, and go to state 61

    STMT	go to state 62
    BLOCK	go to state 15
    ASSIGN	go to state 16
    LOCATION	go to state 17



state 34

    METH_LIST  ->  error . ';'   (rule 8)
    STMT  ->  error . ';'   (rule 39)

    ';' 	shift, and go to state 18



state 35

    METH_LIST  ->  METH METH_LIST .   (rule 4)

    $default	reduce using rule 4 (METH_LIST)



state 36

    DECL  ->  TYPE error . ';'   (rule 25)

    ';' 	shift, and go to state 63



state 37

    METH  ->  TYPE ID . @1 '(' PARAMS ')' @2 BODY   (rule 11)
    DECL  ->  TYPE ID . VARS ';'   (rule 23)
    DECL  ->  TYPE ID . '=' EXPR VARS ';'   (rule 24)

    ',' 	shift, and go to state 64
    '=' 	shift, and go to state 65

    ';' 	reduce using rule 28 (VARS)
    $default	reduce using rule 9 (@1)

    @1  	go to state 66
    VARS	go to state 67



state 38

    METH_LIST  ->  DECL ';' .   (rule 6)

    $default	reduce using rule 6 (METH_LIST)



state 39

    METH_LIST  ->  STMT ';' .   (rule 7)

    $default	reduce using rule 7 (METH_LIST)



state 40

    STMT  ->  ASSIGN ';' .   (rule 31)

    $default	reduce using rule 31 (STMT)



state 41

    ASSIGN  ->  LOCATION '=' . EXPR   (rule 41)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 68
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 42

    FACTOR  ->  '(' EXPR . ')'   (rule 60)

    ')' 	shift, and go to state 69



state 43

    FACTOR  ->  METHOD '(' . ACTUALS ')'   (rule 65)

    ')' 	reduce using rule 67 (ACTUALS)
    $default	reduce using rule 69 (ARGS)

    ACTUALS	go to state 70
    ARGS	go to state 71



state 44

    STMT  ->  RETURN EXPR ';' .   (rule 32)

    $default	reduce using rule 32 (STMT)



state 45

    RELOP  ->  GT .   (rule 48)

    $default	reduce using rule 48 (RELOP)



state 46

    RELOP  ->  LT .   (rule 47)

    $default	reduce using rule 47 (RELOP)



state 47

    RELOP  ->  GE .   (rule 49)

    $default	reduce using rule 49 (RELOP)



state 48

    RELOP  ->  LE .   (rule 46)

    $default	reduce using rule 46 (RELOP)



state 49

    RELOP  ->  EQ .   (rule 50)

    $default	reduce using rule 50 (RELOP)



state 50

    RELOP  ->  NE .   (rule 51)

    $default	reduce using rule 51 (RELOP)



state 51

    ADDOP  ->  '+' .   (rule 54)

    $default	reduce using rule 54 (ADDOP)



state 52

    ADDOP  ->  '-' .   (rule 55)

    $default	reduce using rule 55 (ADDOP)



state 53

    EXPR  ->  ADD_EXPR RELOP . ADD_EXPR   (rule 44)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    ADD_EXPR	go to state 72
    TERM	go to state 28
    FACTOR	go to state 29



state 54

    ADD_EXPR  ->  ADD_EXPR ADDOP . TERM   (rule 52)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    TERM	go to state 73
    FACTOR	go to state 29



state 55

    MULOP  ->  '*' .   (rule 58)

    $default	reduce using rule 58 (MULOP)



state 56

    MULOP  ->  '/' .   (rule 59)

    $default	reduce using rule 59 (MULOP)



state 57

    TERM  ->  TERM MULOP . FACTOR   (rule 56)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    FACTOR	go to state 74



state 58

    STMT  ->  IF '(' EXPR . ')' STMT ELSE STMT   (rule 33)

    ')' 	shift, and go to state 75



state 59

    STMT  ->  WHILE '(' EXPR . ')' @3 STMT   (rule 35)

    ')' 	shift, and go to state 76



state 60

    STMT  ->  error . ';'   (rule 39)

    ';' 	shift, and go to state 77



state 61

    BLOCK  ->  '{' STMTS '}' .   (rule 40)

    $default	reduce using rule 40 (BLOCK)



state 62

    STMTS  ->  STMTS STMT .   (rule 29)

    $default	reduce using rule 29 (STMTS)



state 63

    DECL  ->  TYPE error ';' .   (rule 25)

    $default	reduce using rule 25 (DECL)



state 64

    VARS  ->  ',' . ID VARS   (rule 26)
    VARS  ->  ',' . ID '=' EXPR VARS   (rule 27)

    ID  	shift, and go to state 78



state 65

    DECL  ->  TYPE ID '=' . EXPR VARS ';'   (rule 24)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 79
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 66

    METH  ->  TYPE ID @1 . '(' PARAMS ')' @2 BODY   (rule 11)

    '(' 	shift, and go to state 80



state 67

    DECL  ->  TYPE ID VARS . ';'   (rule 23)

    ';' 	shift, and go to state 81



state 68

    ASSIGN  ->  LOCATION '=' EXPR .   (rule 41)

    $default	reduce using rule 41 (ASSIGN)



state 69

    FACTOR  ->  '(' EXPR ')' .   (rule 60)

    $default	reduce using rule 60 (FACTOR)



state 70

    FACTOR  ->  METHOD '(' ACTUALS . ')'   (rule 65)

    ')' 	shift, and go to state 82



state 71

    ACTUALS  ->  ARGS . EXPR   (rule 66)
    ARGS  ->  ARGS . EXPR ','   (rule 68)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 83
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 72

    EXPR  ->  ADD_EXPR RELOP ADD_EXPR .   (rule 44)
    ADD_EXPR  ->  ADD_EXPR . ADDOP TERM   (rule 52)

    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52

    $default	reduce using rule 44 (EXPR)

    ADDOP	go to state 54



state 73

    ADD_EXPR  ->  ADD_EXPR ADDOP TERM .   (rule 52)
    TERM  ->  TERM . MULOP FACTOR   (rule 56)

    '*' 	shift, and go to state 55
    '/' 	shift, and go to state 56

    $default	reduce using rule 52 (ADD_EXPR)

    MULOP	go to state 57



state 74

    TERM  ->  TERM MULOP FACTOR .   (rule 56)

    $default	reduce using rule 56 (TERM)



state 75

    STMT  ->  IF '(' EXPR ')' . STMT ELSE STMT   (rule 33)

    error	shift, and go to state 60
    RETURN	shift, and go to state 2
    BREAK	shift, and go to state 3
    IF  	shift, and go to state 4
    WHILE	shift, and go to state 6
    ID  	shift, and go to state 7
    ';' 	shift, and go to state 8
    '{' 	shift, and go to state 9

    STMT	go to state 84
    BLOCK	go to state 15
    ASSIGN	go to state 16
    LOCATION	go to state 17



state 76

    STMT  ->  WHILE '(' EXPR ')' . @3 STMT   (rule 35)

    $default	reduce using rule 34 (@3)

    @3  	go to state 85



state 77

    STMT  ->  error ';' .   (rule 39)

    $default	reduce using rule 39 (STMT)



state 78

    VARS  ->  ',' ID . VARS   (rule 26)
    VARS  ->  ',' ID . '=' EXPR VARS   (rule 27)

    ',' 	shift, and go to state 64
    '=' 	shift, and go to state 86

    $default	reduce using rule 28 (VARS)

    VARS	go to state 87



state 79

    DECL  ->  TYPE ID '=' EXPR . VARS ';'   (rule 24)

    ',' 	shift, and go to state 64

    $default	reduce using rule 28 (VARS)

    VARS	go to state 88



state 80

    METH  ->  TYPE ID @1 '(' . PARAMS ')' @2 BODY   (rule 11)

    error	shift, and go to state 89

    INT 	reduce using rule 16 (FORMALS)
    ')' 	reduce using rule 13 (PARAMS)

    PARAMS	go to state 90
    FORMALS	go to state 91



state 81

    DECL  ->  TYPE ID VARS ';' .   (rule 23)

    $default	reduce using rule 23 (DECL)



state 82

    FACTOR  ->  METHOD '(' ACTUALS ')' .   (rule 65)

    $default	reduce using rule 65 (FACTOR)



state 83

    ACTUALS  ->  ARGS EXPR .   (rule 66)
    ARGS  ->  ARGS EXPR . ','   (rule 68)

    ',' 	shift, and go to state 92

    $default	reduce using rule 66 (ACTUALS)



state 84

    STMT  ->  IF '(' EXPR ')' STMT . ELSE STMT   (rule 33)

    ELSE	shift, and go to state 93



state 85

    STMT  ->  WHILE '(' EXPR ')' @3 . STMT   (rule 35)

    error	shift, and go to state 60
    RETURN	shift, and go to state 2
    BREAK	shift, and go to state 3
    IF  	shift, and go to state 4
    WHILE	shift, and go to state 6
    ID  	shift, and go to state 7
    ';' 	shift, and go to state 8
    '{' 	shift, and go to state 9

    STMT	go to state 94
    BLOCK	go to state 15
    ASSIGN	go to state 16
    LOCATION	go to state 17



state 86

    VARS  ->  ',' ID '=' . EXPR VARS   (rule 27)

    TRUE	shift, and go to state 19
    FALSE	shift, and go to state 20
    ID  	shift, and go to state 21
    NUM 	shift, and go to state 22
    '(' 	shift, and go to state 23

    LOCATION	go to state 24
    METHOD	go to state 25
    EXPR	go to state 95
    ADD_EXPR	go to state 27
    TERM	go to state 28
    FACTOR	go to state 29



state 87

    VARS  ->  ',' ID VARS .   (rule 26)

    $default	reduce using rule 26 (VARS)



state 88

    DECL  ->  TYPE ID '=' EXPR VARS . ';'   (rule 24)

    ';' 	shift, and go to state 96



state 89

    PARAMS  ->  error . ')'   (rule 14)

    ')' 	shift, and go to state 97



state 90

    METH  ->  TYPE ID @1 '(' PARAMS . ')' @2 BODY   (rule 11)

    ')' 	shift, and go to state 98



state 91

    PARAMS  ->  FORMALS . TYPE ID   (rule 12)
    FORMALS  ->  FORMALS . TYPE ID ','   (rule 15)

    INT 	shift, and go to state 5

    TYPE	go to state 99



state 92

    ARGS  ->  ARGS EXPR ',' .   (rule 68)

    $default	reduce using rule 68 (ARGS)



state 93

    STMT  ->  IF '(' EXPR ')' STMT ELSE . STMT   (rule 33)

    error	shift, and go to state 60
    RETURN	shift, and go to state 2
    BREAK	shift, and go to state 3
    IF  	shift, and go to state 4
    WHILE	shift, and go to state 6
    ID  	shift, and go to state 7
    ';' 	shift, and go to state 8
    '{' 	shift, and go to state 9

    STMT	go to state 100
    BLOCK	go to state 15
    ASSIGN	go to state 16
    LOCATION	go to state 17



state 94

    STMT  ->  WHILE '(' EXPR ')' @3 STMT .   (rule 35)

    $default	reduce using rule 35 (STMT)



state 95

    VARS  ->  ',' ID '=' EXPR . VARS   (rule 27)

    ',' 	shift, and go to state 64

    $default	reduce using rule 28 (VARS)

    VARS	go to state 101



state 96

    DECL  ->  TYPE ID '=' EXPR VARS ';' .   (rule 24)

    $default	reduce using rule 24 (DECL)



state 97

    PARAMS  ->  error ')' .   (rule 14)

    $default	reduce using rule 14 (PARAMS)



state 98

    METH  ->  TYPE ID @1 '(' PARAMS ')' . @2 BODY   (rule 11)

    $default	reduce using rule 10 (@2)

    @2  	go to state 102



state 99

    PARAMS  ->  FORMALS TYPE . ID   (rule 12)
    FORMALS  ->  FORMALS TYPE . ID ','   (rule 15)

    ID  	shift, and go to state 103



state 100

    STMT  ->  IF '(' EXPR ')' STMT ELSE STMT .   (rule 33)

    $default	reduce using rule 33 (STMT)



state 101

    VARS  ->  ',' ID '=' EXPR VARS .   (rule 27)

    $default	reduce using rule 27 (VARS)



state 102

    METH  ->  TYPE ID @1 '(' PARAMS ')' @2 . BODY   (rule 11)

    '{' 	shift, and go to state 104

    BODY	go to state 105



state 103

    PARAMS  ->  FORMALS TYPE ID .   (rule 12)
    FORMALS  ->  FORMALS TYPE ID . ','   (rule 15)

    ',' 	shift, and go to state 106

    $default	reduce using rule 12 (PARAMS)



state 104

    BODY  ->  '{' . DECLS STMTS '}'   (rule 18)

    INT 	reduce using rule 22 (DECL_LIST)
    $default	reduce using rule 20 (DECLS)

    DECLS	go to state 107
    DECL_LIST	go to state 108



state 105

    METH  ->  TYPE ID @1 '(' PARAMS ')' @2 BODY .   (rule 11)

    $default	reduce using rule 11 (METH)



state 106

    FORMALS  ->  FORMALS TYPE ID ',' .   (rule 15)

    $default	reduce using rule 15 (FORMALS)



state 107

    BODY  ->  '{' DECLS . STMTS '}'   (rule 18)

    $default	reduce using rule 30 (STMTS)

    STMTS	go to state 109



state 108

    DECLS  ->  DECL_LIST . DECL   (rule 19)
    DECL_LIST  ->  DECL_LIST . DECL   (rule 21)

    INT 	shift, and go to state 5

    TYPE	go to state 110
    DECL	go to state 111



state 109

    BODY  ->  '{' DECLS STMTS . '}'   (rule 18)
    STMTS  ->  STMTS . STMT   (rule 29)

    error	shift, and go to state 60
    RETURN	shift, and go to state 2
    BREAK	shift, and go to state 3
    IF  	shift, and go to state 4
    WHILE	shift, and go to state 6
    ID  	shift, and go to state 7
    ';' 	shift, and go to state 8
    '{' 	shift, and go to state 9
    '}' 	shift, and go to state 112

    STMT	go to state 62
    BLOCK	go to state 15
    ASSIGN	go to state 16
    LOCATION	go to state 17



state 110

    DECL  ->  TYPE . ID VARS ';'   (rule 23)
    DECL  ->  TYPE . ID '=' EXPR VARS ';'   (rule 24)
    DECL  ->  TYPE . error ';'   (rule 25)

    error	shift, and go to state 36
    ID  	shift, and go to state 113



state 111

    DECLS  ->  DECL_LIST DECL .   (rule 19)
    DECL_LIST  ->  DECL_LIST DECL .   (rule 21)

    INT 	reduce using rule 21 (DECL_LIST)
    $default	reduce using rule 19 (DECLS)



state 112

    BODY  ->  '{' DECLS STMTS '}' .   (rule 18)

    $default	reduce using rule 18 (BODY)



state 113

    DECL  ->  TYPE ID . VARS ';'   (rule 23)
    DECL  ->  TYPE ID . '=' EXPR VARS ';'   (rule 24)

    ',' 	shift, and go to state 64
    '=' 	shift, and go to state 65

    $default	reduce using rule 28 (VARS)

    VARS	go to state 67



state 114

    $   	go to state 115



state 115

    $   	go to state 116



state 116

    $default	accept
