Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: METH_LIST

    2 METH_LIST: METH METH_LIST
    3          | METH

    4 $@1: %empty

    5 METH: TYPE ID $@1 '(' PARAMS ')' BODY

    6 PARAMS: FORMALS TYPE ID
    7       | %empty

    8 FORMALS: FORMALS TYPE ID ','
    9        | %empty

   10 TYPE: INT

   11 BODY: '{' DECLS STMTS '}'

   12 DECLS: DECL_LIST DECL
   13      | %empty

   14 DECL_LIST: DECL_LIST DECL
   15          | %empty

   16 DECL: TYPE ID VARS ';'
   17     | TYPE ID '=' EXPR VARS ';'

   18 VARS: ',' ID VARS
   19     | ',' ID '=' EXPR VARS
   20     | %empty

   21 STMTS: STMTS STMT
   22      | %empty

   23 STMT: ASSIGN ';'
   24     | RETURN EXPR ';'
   25     | IF '(' EXPR ')' STMT ELSE STMT
   26     | WHILE '(' EXPR ')' STMT
   27     | BREAK ';'
   28     | BLOCK
   29     | ';'

   30 BLOCK: '{' STMTS '}'

   31 ASSIGN: LOCATION '=' EXPR

   32 LOCATION: ID

   33 METHOD: ID

   34 EXPR: ADD_EXPR RELOP ADD_EXPR
   35     | ADD_EXPR

   36 RELOP: LE
   37      | LT
   38      | GT
   39      | GE
   40      | EQ
   41      | NE

   42 ADD_EXPR: ADD_EXPR ADDOP TERM
   43         | TERM

   44 ADDOP: '+'
   45      | '-'

   46 TERM: TERM MULOP FACTOR
   47     | FACTOR

   48 MULOP: '*'
   49      | '/'

   50 FACTOR: '(' EXPR ')'
   51       | LOCATION
   52       | NUM
   53       | TRUE
   54       | FALSE
   55       | METHOD '(' ACTUALS ')'

   56 ACTUALS: ARGS EXPR
   57        | %empty

   58 ARGS: ARGS EXPR ','
   59     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 5 25 26 50 55
    ')' (41) 5 25 26 50 55
    '*' (42) 48
    '+' (43) 44
    ',' (44) 8 18 19 58
    '-' (45) 45
    '/' (47) 49
    ';' (59) 16 17 23 24 27 29
    '=' (61) 17 19 31
    '{' (123) 11 30
    '}' (125) 11 30
    error (256)
    RETURN <yint> (258) 24
    BREAK <yint> (259) 27
    ELSE <yint> (260) 25
    IF <yint> (261) 25
    INT <yint> (262) 10
    WHILE <yint> (263) 26
    TRUE <yint> (264) 53
    FALSE <yint> (265) 54
    GT <yint> (266) 38
    LT <yint> (267) 37
    GE <yint> (268) 39
    LE <yint> (269) 36
    EQ <yint> (270) 40
    NE <yint> (271) 41
    ID <ystr> (272) 5 6 8 16 17 18 19 32 33
    NUM <yint> (273) 52


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    PROGRAM <stnode> (31)
        on left: 1
        on right: 0
    METH_LIST <stnode> (32)
        on left: 2 3
        on right: 1 2
    METH <stnode> (33)
        on left: 5
        on right: 2 3
    $@1 (34)
        on left: 4
        on right: 5
    PARAMS <stnode> (35)
        on left: 6 7
        on right: 5
    FORMALS <stnode> (36)
        on left: 8 9
        on right: 6 8
    TYPE <stnode> (37)
        on left: 10
        on right: 5 6 8 16 17
    BODY <stnode> (38)
        on left: 11
        on right: 5
    DECLS <stnode> (39)
        on left: 12 13
        on right: 11
    DECL_LIST <stnode> (40)
        on left: 14 15
        on right: 12 14
    DECL <stnode> (41)
        on left: 16 17
        on right: 12 14
    VARS <stnode> (42)
        on left: 18 19 20
        on right: 16 17 18 19
    STMTS <stnode> (43)
        on left: 21 22
        on right: 11 21 30
    STMT <stnode> (44)
        on left: 23 24 25 26 27 28 29
        on right: 21 25 26
    BLOCK <stnode> (45)
        on left: 30
        on right: 28
    ASSIGN <stnode> (46)
        on left: 31
        on right: 23
    LOCATION <stnode> (47)
        on left: 32
        on right: 31 51
    METHOD <stnode> (48)
        on left: 33
        on right: 55
    EXPR <stnode> (49)
        on left: 34 35
        on right: 17 19 24 25 26 31 50 56 58
    RELOP <stnode> (50)
        on left: 36 37 38 39 40 41
        on right: 34
    ADD_EXPR <stnode> (51)
        on left: 42 43
        on right: 34 35 42
    ADDOP <stnode> (52)
        on left: 44 45
        on right: 42
    TERM <stnode> (53)
        on left: 46 47
        on right: 42 43 46
    MULOP <stnode> (54)
        on left: 48 49
        on right: 46
    FACTOR <stnode> (55)
        on left: 50 51 52 53 54 55
        on right: 46 47
    ACTUALS <stnode> (56)
        on left: 56 57
        on right: 55
    ARGS <stnode> (57)
        on left: 58 59
        on right: 56 58


State 0

    0 $accept: . PROGRAM $end

    INT  shift, and go to state 1

    PROGRAM    go to state 2
    METH_LIST  go to state 3
    METH       go to state 4
    TYPE       go to state 5


State 1

   10 TYPE: INT .

    $default  reduce using rule 10 (TYPE)


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


State 3

    1 PROGRAM: METH_LIST .

    $default  reduce using rule 1 (PROGRAM)


State 4

    2 METH_LIST: METH . METH_LIST
    3          | METH .

    INT  shift, and go to state 1

    $default  reduce using rule 3 (METH_LIST)

    METH_LIST  go to state 7
    METH       go to state 4
    TYPE       go to state 5


State 5

    5 METH: TYPE . ID $@1 '(' PARAMS ')' BODY

    ID  shift, and go to state 8


State 6

    0 $accept: PROGRAM $end .

    $default  accept


State 7

    2 METH_LIST: METH METH_LIST .

    $default  reduce using rule 2 (METH_LIST)


State 8

    5 METH: TYPE ID . $@1 '(' PARAMS ')' BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    5 METH: TYPE ID $@1 . '(' PARAMS ')' BODY

    '('  shift, and go to state 10


State 10

    5 METH: TYPE ID $@1 '(' . PARAMS ')' BODY

    INT       reduce using rule 9 (FORMALS)
    $default  reduce using rule 7 (PARAMS)

    PARAMS   go to state 11
    FORMALS  go to state 12


State 11

    5 METH: TYPE ID $@1 '(' PARAMS . ')' BODY

    ')'  shift, and go to state 13


State 12

    6 PARAMS: FORMALS . TYPE ID
    8 FORMALS: FORMALS . TYPE ID ','

    INT  shift, and go to state 1

    TYPE  go to state 14


State 13

    5 METH: TYPE ID $@1 '(' PARAMS ')' . BODY

    '{'  shift, and go to state 15

    BODY  go to state 16


State 14

    6 PARAMS: FORMALS TYPE . ID
    8 FORMALS: FORMALS TYPE . ID ','

    ID  shift, and go to state 17


State 15

   11 BODY: '{' . DECLS STMTS '}'

    INT       reduce using rule 15 (DECL_LIST)
    $default  reduce using rule 13 (DECLS)

    DECLS      go to state 18
    DECL_LIST  go to state 19


State 16

    5 METH: TYPE ID $@1 '(' PARAMS ')' BODY .

    $default  reduce using rule 5 (METH)


State 17

    6 PARAMS: FORMALS TYPE ID .
    8 FORMALS: FORMALS TYPE ID . ','

    ','  shift, and go to state 20

    $default  reduce using rule 6 (PARAMS)


State 18

   11 BODY: '{' DECLS . STMTS '}'

    $default  reduce using rule 22 (STMTS)

    STMTS  go to state 21


State 19

   12 DECLS: DECL_LIST . DECL
   14 DECL_LIST: DECL_LIST . DECL

    INT  shift, and go to state 1

    TYPE  go to state 22
    DECL  go to state 23


State 20

    8 FORMALS: FORMALS TYPE ID ',' .

    $default  reduce using rule 8 (FORMALS)


State 21

   11 BODY: '{' DECLS STMTS . '}'
   21 STMTS: STMTS . STMT

    RETURN  shift, and go to state 24
    BREAK   shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    ID      shift, and go to state 28
    '{'     shift, and go to state 29
    '}'     shift, and go to state 30
    ';'     shift, and go to state 31

    STMT      go to state 32
    BLOCK     go to state 33
    ASSIGN    go to state 34
    LOCATION  go to state 35


State 22

   16 DECL: TYPE . ID VARS ';'
   17     | TYPE . ID '=' EXPR VARS ';'

    ID  shift, and go to state 36


State 23

   12 DECLS: DECL_LIST DECL .
   14 DECL_LIST: DECL_LIST DECL .

    INT       reduce using rule 14 (DECL_LIST)
    $default  reduce using rule 12 (DECLS)


State 24

   24 STMT: RETURN . EXPR ';'

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 44
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 25

   27 STMT: BREAK . ';'

    ';'  shift, and go to state 48


State 26

   25 STMT: IF . '(' EXPR ')' STMT ELSE STMT

    '('  shift, and go to state 49


State 27

   26 STMT: WHILE . '(' EXPR ')' STMT

    '('  shift, and go to state 50


State 28

   32 LOCATION: ID .

    $default  reduce using rule 32 (LOCATION)


State 29

   30 BLOCK: '{' . STMTS '}'

    $default  reduce using rule 22 (STMTS)

    STMTS  go to state 51


State 30

   11 BODY: '{' DECLS STMTS '}' .

    $default  reduce using rule 11 (BODY)


State 31

   29 STMT: ';' .

    $default  reduce using rule 29 (STMT)


State 32

   21 STMTS: STMTS STMT .

    $default  reduce using rule 21 (STMTS)


State 33

   28 STMT: BLOCK .

    $default  reduce using rule 28 (STMT)


State 34

   23 STMT: ASSIGN . ';'

    ';'  shift, and go to state 52


State 35

   31 ASSIGN: LOCATION . '=' EXPR

    '='  shift, and go to state 53


State 36

   16 DECL: TYPE ID . VARS ';'
   17     | TYPE ID . '=' EXPR VARS ';'

    ','  shift, and go to state 54
    '='  shift, and go to state 55

    $default  reduce using rule 20 (VARS)

    VARS  go to state 56


State 37

   53 FACTOR: TRUE .

    $default  reduce using rule 53 (FACTOR)


State 38

   54 FACTOR: FALSE .

    $default  reduce using rule 54 (FACTOR)


State 39

   32 LOCATION: ID .
   33 METHOD: ID .

    '('       reduce using rule 33 (METHOD)
    $default  reduce using rule 32 (LOCATION)


State 40

   52 FACTOR: NUM .

    $default  reduce using rule 52 (FACTOR)


State 41

   50 FACTOR: '(' . EXPR ')'

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 57
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 42

   51 FACTOR: LOCATION .

    $default  reduce using rule 51 (FACTOR)


State 43

   55 FACTOR: METHOD . '(' ACTUALS ')'

    '('  shift, and go to state 58


State 44

   24 STMT: RETURN EXPR . ';'

    ';'  shift, and go to state 59


State 45

   34 EXPR: ADD_EXPR . RELOP ADD_EXPR
   35     | ADD_EXPR .
   42 ADD_EXPR: ADD_EXPR . ADDOP TERM

    GT   shift, and go to state 60
    LT   shift, and go to state 61
    GE   shift, and go to state 62
    LE   shift, and go to state 63
    EQ   shift, and go to state 64
    NE   shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67

    $default  reduce using rule 35 (EXPR)

    RELOP  go to state 68
    ADDOP  go to state 69


State 46

   43 ADD_EXPR: TERM .
   46 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71

    $default  reduce using rule 43 (ADD_EXPR)

    MULOP  go to state 72


State 47

   47 TERM: FACTOR .

    $default  reduce using rule 47 (TERM)


State 48

   27 STMT: BREAK ';' .

    $default  reduce using rule 27 (STMT)


State 49

   25 STMT: IF '(' . EXPR ')' STMT ELSE STMT

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 73
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 50

   26 STMT: WHILE '(' . EXPR ')' STMT

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 74
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 51

   21 STMTS: STMTS . STMT
   30 BLOCK: '{' STMTS . '}'

    RETURN  shift, and go to state 24
    BREAK   shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    ID      shift, and go to state 28
    '{'     shift, and go to state 29
    '}'     shift, and go to state 75
    ';'     shift, and go to state 31

    STMT      go to state 32
    BLOCK     go to state 33
    ASSIGN    go to state 34
    LOCATION  go to state 35


State 52

   23 STMT: ASSIGN ';' .

    $default  reduce using rule 23 (STMT)


State 53

   31 ASSIGN: LOCATION '=' . EXPR

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 76
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 54

   18 VARS: ',' . ID VARS
   19     | ',' . ID '=' EXPR VARS

    ID  shift, and go to state 77


State 55

   17 DECL: TYPE ID '=' . EXPR VARS ';'

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 78
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 56

   16 DECL: TYPE ID VARS . ';'

    ';'  shift, and go to state 79


State 57

   50 FACTOR: '(' EXPR . ')'

    ')'  shift, and go to state 80


State 58

   55 FACTOR: METHOD '(' . ACTUALS ')'

    ')'       reduce using rule 57 (ACTUALS)
    $default  reduce using rule 59 (ARGS)

    ACTUALS  go to state 81
    ARGS     go to state 82


State 59

   24 STMT: RETURN EXPR ';' .

    $default  reduce using rule 24 (STMT)


State 60

   38 RELOP: GT .

    $default  reduce using rule 38 (RELOP)


State 61

   37 RELOP: LT .

    $default  reduce using rule 37 (RELOP)


State 62

   39 RELOP: GE .

    $default  reduce using rule 39 (RELOP)


State 63

   36 RELOP: LE .

    $default  reduce using rule 36 (RELOP)


State 64

   40 RELOP: EQ .

    $default  reduce using rule 40 (RELOP)


State 65

   41 RELOP: NE .

    $default  reduce using rule 41 (RELOP)


State 66

   44 ADDOP: '+' .

    $default  reduce using rule 44 (ADDOP)


State 67

   45 ADDOP: '-' .

    $default  reduce using rule 45 (ADDOP)


State 68

   34 EXPR: ADD_EXPR RELOP . ADD_EXPR

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    ADD_EXPR  go to state 83
    TERM      go to state 46
    FACTOR    go to state 47


State 69

   42 ADD_EXPR: ADD_EXPR ADDOP . TERM

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    TERM      go to state 84
    FACTOR    go to state 47


State 70

   48 MULOP: '*' .

    $default  reduce using rule 48 (MULOP)


State 71

   49 MULOP: '/' .

    $default  reduce using rule 49 (MULOP)


State 72

   46 TERM: TERM MULOP . FACTOR

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    FACTOR    go to state 85


State 73

   25 STMT: IF '(' EXPR . ')' STMT ELSE STMT

    ')'  shift, and go to state 86


State 74

   26 STMT: WHILE '(' EXPR . ')' STMT

    ')'  shift, and go to state 87


State 75

   30 BLOCK: '{' STMTS '}' .

    $default  reduce using rule 30 (BLOCK)


State 76

   31 ASSIGN: LOCATION '=' EXPR .

    $default  reduce using rule 31 (ASSIGN)


State 77

   18 VARS: ',' ID . VARS
   19     | ',' ID . '=' EXPR VARS

    ','  shift, and go to state 54
    '='  shift, and go to state 88

    $default  reduce using rule 20 (VARS)

    VARS  go to state 89


State 78

   17 DECL: TYPE ID '=' EXPR . VARS ';'

    ','  shift, and go to state 54

    $default  reduce using rule 20 (VARS)

    VARS  go to state 90


State 79

   16 DECL: TYPE ID VARS ';' .

    $default  reduce using rule 16 (DECL)


State 80

   50 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 50 (FACTOR)


State 81

   55 FACTOR: METHOD '(' ACTUALS . ')'

    ')'  shift, and go to state 91


State 82

   56 ACTUALS: ARGS . EXPR
   58 ARGS: ARGS . EXPR ','

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 92
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 83

   34 EXPR: ADD_EXPR RELOP ADD_EXPR .
   42 ADD_EXPR: ADD_EXPR . ADDOP TERM

    '+'  shift, and go to state 66
    '-'  shift, and go to state 67

    $default  reduce using rule 34 (EXPR)

    ADDOP  go to state 69


State 84

   42 ADD_EXPR: ADD_EXPR ADDOP TERM .
   46 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 70
    '/'  shift, and go to state 71

    $default  reduce using rule 42 (ADD_EXPR)

    MULOP  go to state 72


State 85

   46 TERM: TERM MULOP FACTOR .

    $default  reduce using rule 46 (TERM)


State 86

   25 STMT: IF '(' EXPR ')' . STMT ELSE STMT

    RETURN  shift, and go to state 24
    BREAK   shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    ID      shift, and go to state 28
    '{'     shift, and go to state 29
    ';'     shift, and go to state 31

    STMT      go to state 93
    BLOCK     go to state 33
    ASSIGN    go to state 34
    LOCATION  go to state 35


State 87

   26 STMT: WHILE '(' EXPR ')' . STMT

    RETURN  shift, and go to state 24
    BREAK   shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    ID      shift, and go to state 28
    '{'     shift, and go to state 29
    ';'     shift, and go to state 31

    STMT      go to state 94
    BLOCK     go to state 33
    ASSIGN    go to state 34
    LOCATION  go to state 35


State 88

   19 VARS: ',' ID '=' . EXPR VARS

    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ID     shift, and go to state 39
    NUM    shift, and go to state 40
    '('    shift, and go to state 41

    LOCATION  go to state 42
    METHOD    go to state 43
    EXPR      go to state 95
    ADD_EXPR  go to state 45
    TERM      go to state 46
    FACTOR    go to state 47


State 89

   18 VARS: ',' ID VARS .

    $default  reduce using rule 18 (VARS)


State 90

   17 DECL: TYPE ID '=' EXPR VARS . ';'

    ';'  shift, and go to state 96


State 91

   55 FACTOR: METHOD '(' ACTUALS ')' .

    $default  reduce using rule 55 (FACTOR)


State 92

   56 ACTUALS: ARGS EXPR .
   58 ARGS: ARGS EXPR . ','

    ','  shift, and go to state 97

    $default  reduce using rule 56 (ACTUALS)


State 93

   25 STMT: IF '(' EXPR ')' STMT . ELSE STMT

    ELSE  shift, and go to state 98


State 94

   26 STMT: WHILE '(' EXPR ')' STMT .

    $default  reduce using rule 26 (STMT)


State 95

   19 VARS: ',' ID '=' EXPR . VARS

    ','  shift, and go to state 54

    $default  reduce using rule 20 (VARS)

    VARS  go to state 99


State 96

   17 DECL: TYPE ID '=' EXPR VARS ';' .

    $default  reduce using rule 17 (DECL)


State 97

   58 ARGS: ARGS EXPR ',' .

    $default  reduce using rule 58 (ARGS)


State 98

   25 STMT: IF '(' EXPR ')' STMT ELSE . STMT

    RETURN  shift, and go to state 24
    BREAK   shift, and go to state 25
    IF      shift, and go to state 26
    WHILE   shift, and go to state 27
    ID      shift, and go to state 28
    '{'     shift, and go to state 29
    ';'     shift, and go to state 31

    STMT      go to state 100
    BLOCK     go to state 33
    ASSIGN    go to state 34
    LOCATION  go to state 35


State 99

   19 VARS: ',' ID '=' EXPR VARS .

    $default  reduce using rule 19 (VARS)


State 100

   25 STMT: IF '(' EXPR ')' STMT ELSE STMT .

    $default  reduce using rule 25 (STMT)
