Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: METH_LIST

    2 METH_LIST: METH METH_LIST
    3          | METH

    4 $@1: %empty

    5 $@2: %empty

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY

    7 PARAMS: FORMALS TYPE ID
    8       | %empty
<<<<<<< HEAD
    9       | error ';'
=======
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    9 FORMALS: FORMALS TYPE ID ','
   10        | %empty

   11 TYPE: INT

   12 BODY: '{' DECLS STMTS '}'

   13 DECLS: DECL_LIST DECL
   14      | %empty

   15 DECL_LIST: DECL_LIST DECL
   16          | %empty

   17 DECL: TYPE ID VARS ';'
   18     | TYPE ID '=' EXPR VARS ';'

   19 VARS: ',' ID VARS
   20     | ',' ID '=' EXPR VARS
   21     | %empty

<<<<<<< HEAD
   23 STMTS: STMTS STMT
   24      | %empty
   25      | error ';'

   26 STMT: ASSIGN ';'
   27     | RETURN EXPR ';'
   28     | IF '(' EXPR ')' STMT ELSE STMT

   29 $@3: %empty

   30 STMT: WHILE '(' EXPR ')' $@3 STMT
   31     | BREAK ';'
   32     | BLOCK
   33     | ';'
=======
   22 STMTS: STMTS STMT
   23      | %empty

   24 STMT: ASSIGN ';'
   25     | RETURN EXPR ';'
   26     | IF '(' EXPR ')' STMT ELSE STMT

   27 $@3: %empty

   28 STMT: WHILE '(' EXPR ')' $@3 STMT
   29     | BREAK ';'
   30     | BLOCK
   31     | ';'
>>>>>>> parent of 62ac46c (some error recovery not perfect)

   32 BLOCK: '{' STMTS '}'

   33 ASSIGN: LOCATION '=' EXPR

   34 LOCATION: ID

   35 METHOD: ID

   36 EXPR: ADD_EXPR RELOP ADD_EXPR
   37     | ADD_EXPR

   38 RELOP: LE
   39      | LT
   40      | GT
   41      | GE
   42      | EQ
   43      | NE

   44 ADD_EXPR: ADD_EXPR ADDOP TERM
   45         | TERM

   46 ADDOP: '+'
   47      | '-'

   48 TERM: TERM MULOP FACTOR
   49     | FACTOR

   50 MULOP: '*'
   51      | '/'

   52 FACTOR: '(' EXPR ')'
   53       | LOCATION
   54       | NUM
   55       | TRUE
   56       | FALSE
   57       | METHOD '(' ACTUALS ')'

   58 ACTUALS: ARGS EXPR
   59        | %empty

<<<<<<< HEAD
   62 ARGS: ARGS EXPR ','
   63     | %empty
   64     | error ')'
=======
   60 ARGS: ARGS EXPR ','
   61     | %empty
>>>>>>> parent of 62ac46c (some error recovery not perfect)


Terminals, with rules where they appear

    $end (0) 0
<<<<<<< HEAD
    '(' (40) 6 28 30 54 59
    ')' (41) 6 28 30 54 59 64
    '*' (42) 52
    '+' (43) 48
    ',' (44) 10 20 21 62
    '-' (45) 49
    '/' (47) 53
    ';' (59) 9 18 19 25 26 27 31 33
    '=' (61) 19 21 35
    '{' (123) 13 34
    '}' (125) 13 34
    error (256) 9 25 64
    RETURN <yint> (258) 27
    BREAK <yint> (259) 31
    ELSE <yint> (260) 28
    IF <yint> (261) 28
    INT <yint> (262) 12
    WHILE <yint> (263) 30
    TRUE <yint> (264) 57
    FALSE <yint> (265) 58
    GT <yint> (266) 42
    LT <yint> (267) 41
    GE <yint> (268) 43
    LE <yint> (269) 40
    EQ <yint> (270) 44
    NE <yint> (271) 45
    ID <ystr> (272) 6 7 10 18 19 20 21 36 37
    NUM <yint> (273) 56
=======
    '(' (40) 6 26 28 52 57
    ')' (41) 6 26 28 52 57
    '*' (42) 50
    '+' (43) 46
    ',' (44) 9 19 20 60
    '-' (45) 47
    '/' (47) 51
    ';' (59) 17 18 24 25 29 31
    '=' (61) 18 20 33
    '{' (123) 12 32
    '}' (125) 12 32
    error (256)
    RETURN <yint> (258) 25
    BREAK <yint> (259) 29
    ELSE <yint> (260) 26
    IF <yint> (261) 26
    INT <yint> (262) 11
    WHILE <yint> (263) 28
    TRUE <yint> (264) 55
    FALSE <yint> (265) 56
    GT <yint> (266) 40
    LT <yint> (267) 39
    GE <yint> (268) 41
    LE <yint> (269) 38
    EQ <yint> (270) 42
    NE <yint> (271) 43
    ID <ystr> (272) 6 7 9 17 18 19 20 34 35
    NUM <yint> (273) 54
>>>>>>> parent of 62ac46c (some error recovery not perfect)


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    PROGRAM <stnode> (31)
        on left: 1
        on right: 0
    METH_LIST <stnode> (32)
        on left: 2 3
        on right: 1 2
    METH <stnode> (33)
        on left: 6
        on right: 2 3
    $@1 (34)
        on left: 4
        on right: 6
    $@2 (35)
        on left: 5
        on right: 6
    PARAMS <stnode> (36)
<<<<<<< HEAD
        on left: 7 8 9
        on right: 6
    FORMALS <stnode> (37)
        on left: 10 11
        on right: 7 10
    TYPE <stnode> (38)
        on left: 12
        on right: 6 7 10 18 19
    BODY <stnode> (39)
        on left: 13
=======
        on left: 7 8
        on right: 6
    FORMALS <stnode> (37)
        on left: 9 10
        on right: 7 9
    TYPE <stnode> (38)
        on left: 11
        on right: 6 7 9 17 18
    BODY <stnode> (39)
        on left: 12
>>>>>>> parent of 62ac46c (some error recovery not perfect)
        on right: 6
    DECLS <stnode> (40)
        on left: 13 14
        on right: 12
    DECL_LIST <stnode> (41)
        on left: 15 16
        on right: 13 15
    DECL <stnode> (42)
        on left: 17 18
        on right: 13 15
    VARS <stnode> (43)
        on left: 19 20 21
        on right: 17 18 19 20
    STMTS <stnode> (44)
<<<<<<< HEAD
        on left: 23 24 25
        on right: 13 23 34
    STMT <stnode> (45)
        on left: 26 27 28 30 31 32 33
        on right: 23 28 30
    $@3 (46)
        on left: 29
        on right: 30
    BLOCK <stnode> (47)
        on left: 34
        on right: 32
    ASSIGN <stnode> (48)
        on left: 35
        on right: 26
=======
        on left: 22 23
        on right: 12 22 32
    STMT <stnode> (45)
        on left: 24 25 26 28 29 30 31
        on right: 22 26 28
    $@3 (46)
        on left: 27
        on right: 28
    BLOCK <stnode> (47)
        on left: 32
        on right: 30
    ASSIGN <stnode> (48)
        on left: 33
        on right: 24
>>>>>>> parent of 62ac46c (some error recovery not perfect)
    LOCATION <stnode> (49)
        on left: 34
        on right: 33 53
    METHOD <stnode> (50)
        on left: 35
        on right: 57
    EXPR <stnode> (51)
<<<<<<< HEAD
        on left: 38 39
        on right: 19 21 27 28 30 35 54 60 62
=======
        on left: 36 37
        on right: 18 20 25 26 28 33 52 58 60
>>>>>>> parent of 62ac46c (some error recovery not perfect)
    RELOP <stnode> (52)
        on left: 38 39 40 41 42 43
        on right: 36
    ADD_EXPR <stnode> (53)
        on left: 44 45
        on right: 36 37 44
    ADDOP <stnode> (54)
        on left: 46 47
        on right: 44
    TERM <stnode> (55)
        on left: 48 49
        on right: 44 45 48
    MULOP <stnode> (56)
        on left: 50 51
        on right: 48
    FACTOR <stnode> (57)
        on left: 52 53 54 55 56 57
        on right: 48 49
    ACTUALS <stnode> (58)
        on left: 58 59
        on right: 57
    ARGS <stnode> (59)
<<<<<<< HEAD
        on left: 62 63 64
        on right: 60 62
=======
        on left: 60 61
        on right: 58 60
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 0

    0 $accept: . PROGRAM $end

    INT  shift, and go to state 1

    PROGRAM    go to state 2
    METH_LIST  go to state 3
    METH       go to state 4
    TYPE       go to state 5


State 1

<<<<<<< HEAD
   12 TYPE: INT .
=======
   11 TYPE: INT .

    $default  reduce using rule 11 (TYPE)


State 2

    0 $accept: PROGRAM . $end
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    $end  shift, and go to state 6


State 2

<<<<<<< HEAD
    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


State 3

=======
>>>>>>> parent of 62ac46c (some error recovery not perfect)
    1 PROGRAM: METH_LIST .

    $default  reduce using rule 1 (PROGRAM)


State 4

    2 METH_LIST: METH . METH_LIST
    3          | METH .

    INT  shift, and go to state 1

    $default  reduce using rule 3 (METH_LIST)

    METH_LIST  go to state 7
    METH       go to state 4
    TYPE       go to state 5


State 5

    6 METH: TYPE . ID $@1 '(' PARAMS ')' $@2 BODY

    ID  shift, and go to state 8


State 6

    0 $accept: PROGRAM $end .

    $default  accept


State 7

    2 METH_LIST: METH METH_LIST .

    $default  reduce using rule 2 (METH_LIST)


State 8

    6 METH: TYPE ID . $@1 '(' PARAMS ')' $@2 BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 METH: TYPE ID $@1 . '(' PARAMS ')' $@2 BODY

    '('  shift, and go to state 10


State 10

    6 METH: TYPE ID $@1 '(' . PARAMS ')' $@2 BODY

<<<<<<< HEAD
    error  shift, and go to state 11

    INT  reduce using rule 11 (FORMALS)
    ')'  reduce using rule 8 (PARAMS)

    PARAMS   go to state 12
    FORMALS  go to state 13
=======
    INT       reduce using rule 10 (FORMALS)
    $default  reduce using rule 8 (PARAMS)

    PARAMS   go to state 11
    FORMALS  go to state 12
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 11

<<<<<<< HEAD
    9 PARAMS: error . ';'

    ';'  shift, and go to state 14
=======
    6 METH: TYPE ID $@1 '(' PARAMS . ')' $@2 BODY

    ')'  shift, and go to state 13
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 12

<<<<<<< HEAD
    6 METH: TYPE ID $@1 '(' PARAMS . ')' $@2 BODY
=======
    7 PARAMS: FORMALS . TYPE ID
    9 FORMALS: FORMALS . TYPE ID ','

    INT  shift, and go to state 1

    TYPE  go to state 14


State 13

    6 METH: TYPE ID $@1 '(' PARAMS ')' . $@2 BODY
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 13

<<<<<<< HEAD
    7 PARAMS: FORMALS . TYPE ID
   10 FORMALS: FORMALS . TYPE ID ','

    INT  shift, and go to state 1

    TYPE  go to state 16
=======
    7 PARAMS: FORMALS TYPE . ID
    9 FORMALS: FORMALS TYPE . ID ','

    ID  shift, and go to state 16
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 14

    9 PARAMS: error ';' .

    $default  reduce using rule 9 (PARAMS)


State 15

<<<<<<< HEAD
    6 METH: TYPE ID $@1 '(' PARAMS ')' . $@2 BODY

    $default  reduce using rule 5 ($@2)
=======
    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 . BODY

    '{'  shift, and go to state 17
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    BODY  go to state 18


State 16

<<<<<<< HEAD
    7 PARAMS: FORMALS TYPE . ID
   10 FORMALS: FORMALS TYPE . ID ','
=======
    7 PARAMS: FORMALS TYPE ID .
    9 FORMALS: FORMALS TYPE ID . ','
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    ','  shift, and go to state 19

    $default  reduce using rule 7 (PARAMS)


State 17

<<<<<<< HEAD
    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 . BODY

    '{'  shift, and go to state 19

    BODY  go to state 20


State 18

    7 PARAMS: FORMALS TYPE ID .
   10 FORMALS: FORMALS TYPE ID . ','

    ','  shift, and go to state 21

    $default  reduce using rule 7 (PARAMS)


State 19

   13 BODY: '{' . DECLS STMTS '}'

    INT       reduce using rule 17 (DECL_LIST)
    $default  reduce using rule 15 (DECLS)

    DECLS      go to state 22
    DECL_LIST  go to state 23


State 20

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY .

    $default  reduce using rule 6 (METH)


State 21

   10 FORMALS: FORMALS TYPE ID ',' .

    $default  reduce using rule 10 (FORMALS)


State 22

   13 BODY: '{' DECLS . STMTS '}'

    error  shift, and go to state 24

    RETURN  reduce using rule 24 (STMTS)
    BREAK   reduce using rule 24 (STMTS)
    IF      reduce using rule 24 (STMTS)
    WHILE   reduce using rule 24 (STMTS)
    ID      reduce using rule 24 (STMTS)
    ';'     reduce using rule 24 (STMTS)
    '{'     reduce using rule 24 (STMTS)
    '}'     reduce using rule 24 (STMTS)

    STMTS  go to state 25


State 23

   14 DECLS: DECL_LIST . DECL
   16 DECL_LIST: DECL_LIST . DECL

    INT  shift, and go to state 1

    TYPE  go to state 26
    DECL  go to state 27


State 24

   25 STMTS: error . ';'

    ';'  shift, and go to state 28


State 25

   13 BODY: '{' DECLS STMTS . '}'
   23 STMTS: STMTS . STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35
    '}'     shift, and go to state 36

    STMT      go to state 37
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 26

   18 DECL: TYPE . ID VARS ';'
   19     | TYPE . ID '=' EXPR VARS ';'

    ID  shift, and go to state 41


State 27

   14 DECLS: DECL_LIST DECL .
   16 DECL_LIST: DECL_LIST DECL .
=======
   12 BODY: '{' . DECLS STMTS '}'
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    INT       reduce using rule 16 (DECL_LIST)
    $default  reduce using rule 14 (DECLS)

    DECLS      go to state 20
    DECL_LIST  go to state 21


State 18

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY .

    $default  reduce using rule 6 (METH)


State 19

    9 FORMALS: FORMALS TYPE ID ',' .

    $default  reduce using rule 9 (FORMALS)


State 20

   12 BODY: '{' DECLS . STMTS '}'

    $default  reduce using rule 23 (STMTS)

    STMTS  go to state 22


State 21

   13 DECLS: DECL_LIST . DECL
   15 DECL_LIST: DECL_LIST . DECL

    INT  shift, and go to state 1

    TYPE  go to state 23
    DECL  go to state 24


State 22

   12 BODY: '{' DECLS STMTS . '}'
   22 STMTS: STMTS . STMT

    RETURN  shift, and go to state 25
    BREAK   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    ID      shift, and go to state 29
    '{'     shift, and go to state 30
    '}'     shift, and go to state 31
    ';'     shift, and go to state 32

    STMT      go to state 33
    BLOCK     go to state 34
    ASSIGN    go to state 35
    LOCATION  go to state 36


State 23

   17 DECL: TYPE . ID VARS ';'
   18     | TYPE . ID '=' EXPR VARS ';'

    ID  shift, and go to state 37


State 24

   13 DECLS: DECL_LIST DECL .
   15 DECL_LIST: DECL_LIST DECL .

    INT       reduce using rule 15 (DECL_LIST)
    $default  reduce using rule 13 (DECLS)


State 25

   25 STMT: RETURN . EXPR ';'

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 45
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48


State 26

   29 STMT: BREAK . ';'

    ';'  shift, and go to state 49


<<<<<<< HEAD
State 28

   25 STMTS: error ';' .

    $default  reduce using rule 25 (STMTS)


State 29

   27 STMT: RETURN . EXPR ';'
=======
State 27

   26 STMT: IF . '(' EXPR ')' STMT ELSE STMT

    '('  shift, and go to state 50


State 28

   28 STMT: WHILE . '(' EXPR ')' $@3 STMT
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    '('  shift, and go to state 51


State 30

<<<<<<< HEAD
   31 STMT: BREAK . ';'
=======
   34 LOCATION: ID .
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    $default  reduce using rule 34 (LOCATION)


State 31

<<<<<<< HEAD
   28 STMT: IF . '(' EXPR ')' STMT ELSE STMT
=======
   32 BLOCK: '{' . STMTS '}'
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    $default  reduce using rule 23 (STMTS)

    STMTS  go to state 52


State 32

<<<<<<< HEAD
   30 STMT: WHILE . '(' EXPR ')' $@3 STMT
=======
   12 BODY: '{' DECLS STMTS '}' .
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    $default  reduce using rule 12 (BODY)


State 33

<<<<<<< HEAD
   36 LOCATION: ID .

    $default  reduce using rule 36 (LOCATION)


State 34

   33 STMT: ';' .

    $default  reduce using rule 33 (STMT)


State 35

   34 BLOCK: '{' . STMTS '}'

    error  shift, and go to state 24

    RETURN  reduce using rule 24 (STMTS)
    BREAK   reduce using rule 24 (STMTS)
    IF      reduce using rule 24 (STMTS)
    WHILE   reduce using rule 24 (STMTS)
    ID      reduce using rule 24 (STMTS)
    ';'     reduce using rule 24 (STMTS)
    '{'     reduce using rule 24 (STMTS)
    '}'     reduce using rule 24 (STMTS)

    STMTS  go to state 56


State 36

   13 BODY: '{' DECLS STMTS '}' .

    $default  reduce using rule 13 (BODY)


State 37

   23 STMTS: STMTS STMT .

    $default  reduce using rule 23 (STMTS)


State 38

   32 STMT: BLOCK .

    $default  reduce using rule 32 (STMT)


State 39

   26 STMT: ASSIGN . ';'
=======
   31 STMT: ';' .

    $default  reduce using rule 31 (STMT)


State 33

   22 STMTS: STMTS STMT .
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    $default  reduce using rule 22 (STMTS)


<<<<<<< HEAD
State 40

   35 ASSIGN: LOCATION . '=' EXPR

    '='  shift, and go to state 58


State 41

   18 DECL: TYPE ID . VARS ';'
   19     | TYPE ID . '=' EXPR VARS ';'

    ','  shift, and go to state 59
    '='  shift, and go to state 60

    $default  reduce using rule 22 (VARS)

    VARS  go to state 61


State 42

   57 FACTOR: TRUE .

    $default  reduce using rule 57 (FACTOR)


State 43

   58 FACTOR: FALSE .

    $default  reduce using rule 58 (FACTOR)


State 44

   36 LOCATION: ID .
   37 METHOD: ID .

    '('       reduce using rule 37 (METHOD)
    $default  reduce using rule 36 (LOCATION)


State 45

   56 FACTOR: NUM .

    $default  reduce using rule 56 (FACTOR)


State 46

   54 FACTOR: '(' . EXPR ')'

    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 62
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 47

   55 FACTOR: LOCATION .

    $default  reduce using rule 55 (FACTOR)


State 48

   59 FACTOR: METHOD . '(' ACTUALS ')'

    '('  shift, and go to state 63


State 49

   27 STMT: RETURN EXPR . ';'

    ';'  shift, and go to state 64


State 50

   38 EXPR: ADD_EXPR . RELOP ADD_EXPR
   39     | ADD_EXPR .
   46 ADD_EXPR: ADD_EXPR . ADDOP TERM

    GT   shift, and go to state 65
    LT   shift, and go to state 66
    GE   shift, and go to state 67
    LE   shift, and go to state 68
    EQ   shift, and go to state 69
    NE   shift, and go to state 70
    '+'  shift, and go to state 71
    '-'  shift, and go to state 72

    $default  reduce using rule 39 (EXPR)

    RELOP  go to state 73
    ADDOP  go to state 74


State 51

   47 ADD_EXPR: TERM .
   50 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76

    $default  reduce using rule 47 (ADD_EXPR)

    MULOP  go to state 77


State 52

   51 TERM: FACTOR .

    $default  reduce using rule 51 (TERM)


State 53

   31 STMT: BREAK ';' .
=======
State 34

   30 STMT: BLOCK .
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    $default  reduce using rule 31 (STMT)


State 35

   24 STMT: ASSIGN . ';'

    ';'  shift, and go to state 53


State 36

   33 ASSIGN: LOCATION . '=' EXPR

    '='  shift, and go to state 54


State 37

   17 DECL: TYPE ID . VARS ';'
   18     | TYPE ID . '=' EXPR VARS ';'

    ','  shift, and go to state 55
    '='  shift, and go to state 56

    $default  reduce using rule 21 (VARS)

    VARS  go to state 57


State 38

   55 FACTOR: TRUE .

    $default  reduce using rule 55 (FACTOR)


State 39

   56 FACTOR: FALSE .

    $default  reduce using rule 56 (FACTOR)


State 40

   34 LOCATION: ID .
   35 METHOD: ID .

    '('       reduce using rule 35 (METHOD)
    $default  reduce using rule 34 (LOCATION)


State 41

   54 FACTOR: NUM .

    $default  reduce using rule 54 (FACTOR)


State 42

   52 FACTOR: '(' . EXPR ')'

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 58
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48


State 43

   53 FACTOR: LOCATION .

    $default  reduce using rule 53 (FACTOR)


State 44

   57 FACTOR: METHOD . '(' ACTUALS ')'

    '('  shift, and go to state 59


State 45

   25 STMT: RETURN EXPR . ';'

    ';'  shift, and go to state 60


State 46

   36 EXPR: ADD_EXPR . RELOP ADD_EXPR
   37     | ADD_EXPR .
   44 ADD_EXPR: ADD_EXPR . ADDOP TERM

    GT   shift, and go to state 61
    LT   shift, and go to state 62
    GE   shift, and go to state 63
    LE   shift, and go to state 64
    EQ   shift, and go to state 65
    NE   shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 37 (EXPR)

    RELOP  go to state 69
    ADDOP  go to state 70


State 47

   45 ADD_EXPR: TERM .
   48 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 45 (ADD_EXPR)

    MULOP  go to state 73


State 48

   49 TERM: FACTOR .

    $default  reduce using rule 49 (TERM)


State 49

   29 STMT: BREAK ';' .

    $default  reduce using rule 29 (STMT)


State 50

   26 STMT: IF '(' . EXPR ')' STMT ELSE STMT

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 74
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48


State 51

   28 STMT: WHILE '(' . EXPR ')' $@3 STMT

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 75
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48


State 52

   22 STMTS: STMTS . STMT
   32 BLOCK: '{' STMTS . '}'

    RETURN  shift, and go to state 25
    BREAK   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    ID      shift, and go to state 29
    '{'     shift, and go to state 30
    '}'     shift, and go to state 76
    ';'     shift, and go to state 32

    STMT      go to state 33
    BLOCK     go to state 34
    ASSIGN    go to state 35
    LOCATION  go to state 36


State 53

   24 STMT: ASSIGN ';' .

    $default  reduce using rule 24 (STMT)


State 54

<<<<<<< HEAD
   28 STMT: IF '(' . EXPR ')' STMT ELSE STMT
=======
   33 ASSIGN: LOCATION '=' . EXPR
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 77
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48


State 55

<<<<<<< HEAD
   30 STMT: WHILE '(' . EXPR ')' $@3 STMT
=======
   19 VARS: ',' . ID VARS
   20     | ',' . ID '=' EXPR VARS
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    ID  shift, and go to state 78


State 56

   18 DECL: TYPE ID '=' . EXPR VARS ';'

<<<<<<< HEAD
    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35
    '}'     shift, and go to state 80

    STMT      go to state 37
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40
=======
    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 79
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 57

<<<<<<< HEAD
   26 STMT: ASSIGN ';' .

    $default  reduce using rule 26 (STMT)
=======
   17 DECL: TYPE ID VARS . ';'

    ';'  shift, and go to state 80
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 58

   52 FACTOR: '(' EXPR . ')'

    ')'  shift, and go to state 81


State 59

   57 FACTOR: METHOD '(' . ACTUALS ')'

    ')'       reduce using rule 59 (ACTUALS)
    $default  reduce using rule 61 (ARGS)

    ACTUALS  go to state 82
    ARGS     go to state 83


State 60

   25 STMT: RETURN EXPR ';' .

    $default  reduce using rule 25 (STMT)


State 61

   40 RELOP: GT .

    $default  reduce using rule 40 (RELOP)


State 62

   39 RELOP: LT .

    $default  reduce using rule 39 (RELOP)


State 63

   41 RELOP: GE .

<<<<<<< HEAD
    error  shift, and go to state 86

    TRUE   reduce using rule 63 (ARGS)
    FALSE  reduce using rule 63 (ARGS)
    ID     reduce using rule 63 (ARGS)
    NUM    reduce using rule 63 (ARGS)
    '('    reduce using rule 63 (ARGS)
    ')'    reduce using rule 61 (ACTUALS)

    ACTUALS  go to state 87
    ARGS     go to state 88
=======
    $default  reduce using rule 41 (RELOP)
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 64

<<<<<<< HEAD
   27 STMT: RETURN EXPR ';' .

    $default  reduce using rule 27 (STMT)
=======
   38 RELOP: LE .

    $default  reduce using rule 38 (RELOP)
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 65

   42 RELOP: EQ .

    $default  reduce using rule 42 (RELOP)


State 66

   43 RELOP: NE .

    $default  reduce using rule 43 (RELOP)


State 67

   46 ADDOP: '+' .

    $default  reduce using rule 46 (ADDOP)


State 68

   47 ADDOP: '-' .

    $default  reduce using rule 47 (ADDOP)


State 69

   36 EXPR: ADD_EXPR RELOP . ADD_EXPR

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    ADD_EXPR  go to state 84
    TERM      go to state 47
    FACTOR    go to state 48


State 70

   44 ADD_EXPR: ADD_EXPR ADDOP . TERM

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    TERM      go to state 85
    FACTOR    go to state 48


State 71

   50 MULOP: '*' .

    $default  reduce using rule 50 (MULOP)


State 72

   51 MULOP: '/' .

    $default  reduce using rule 51 (MULOP)


State 73

   48 TERM: TERM MULOP . FACTOR

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

<<<<<<< HEAD
    LOCATION  go to state 47
    METHOD    go to state 48
    ADD_EXPR  go to state 89
    TERM      go to state 51
    FACTOR    go to state 52
=======
    LOCATION  go to state 43
    METHOD    go to state 44
    FACTOR    go to state 86
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 74

   26 STMT: IF '(' EXPR . ')' STMT ELSE STMT

<<<<<<< HEAD
    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    TERM      go to state 90
    FACTOR    go to state 52
=======
    ')'  shift, and go to state 87
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 75

   28 STMT: WHILE '(' EXPR . ')' $@3 STMT

    ')'  shift, and go to state 88


State 76

   32 BLOCK: '{' STMTS '}' .

    $default  reduce using rule 32 (BLOCK)


State 77

   33 ASSIGN: LOCATION '=' EXPR .

<<<<<<< HEAD
    TRUE   shift, and go to state 42
    FALSE  shift, and go to state 43
    ID     shift, and go to state 44
    NUM    shift, and go to state 45
    '('    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    FACTOR    go to state 91
=======
    $default  reduce using rule 33 (ASSIGN)
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 78

<<<<<<< HEAD
   28 STMT: IF '(' EXPR . ')' STMT ELSE STMT

    ')'  shift, and go to state 92
=======
   19 VARS: ',' ID . VARS
   20     | ',' ID . '=' EXPR VARS

    ','  shift, and go to state 55
    '='  shift, and go to state 89

    $default  reduce using rule 21 (VARS)

    VARS  go to state 90
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 79

<<<<<<< HEAD
   30 STMT: WHILE '(' EXPR . ')' $@3 STMT

    ')'  shift, and go to state 93
=======
   18 DECL: TYPE ID '=' EXPR . VARS ';'

    ','  shift, and go to state 55

    $default  reduce using rule 21 (VARS)

    VARS  go to state 91
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 80

   17 DECL: TYPE ID VARS ';' .

    $default  reduce using rule 17 (DECL)


State 81

   52 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 52 (FACTOR)


State 82

   57 FACTOR: METHOD '(' ACTUALS . ')'

<<<<<<< HEAD
    ','  shift, and go to state 59
    '='  shift, and go to state 94

    $default  reduce using rule 22 (VARS)

    VARS  go to state 95
=======
    ')'  shift, and go to state 92
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 83

   58 ACTUALS: ARGS . EXPR
   60 ARGS: ARGS . EXPR ','

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

<<<<<<< HEAD
    $default  reduce using rule 22 (VARS)

    VARS  go to state 96
=======
    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 93
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 84

   36 EXPR: ADD_EXPR RELOP ADD_EXPR .
   44 ADD_EXPR: ADD_EXPR . ADDOP TERM

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68

    $default  reduce using rule 36 (EXPR)

    ADDOP  go to state 70


State 85

   44 ADD_EXPR: ADD_EXPR ADDOP TERM .
   48 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 44 (ADD_EXPR)

    MULOP  go to state 73


State 86

<<<<<<< HEAD
   64 ARGS: error . ')'

    ')'  shift, and go to state 97
=======
   48 TERM: TERM MULOP FACTOR .

    $default  reduce using rule 48 (TERM)
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 87

<<<<<<< HEAD
   59 FACTOR: METHOD '(' ACTUALS . ')'

    ')'  shift, and go to state 98


State 88

   60 ACTUALS: ARGS . EXPR
   62 ARGS: ARGS . EXPR ','
=======
   26 STMT: IF '(' EXPR ')' . STMT ELSE STMT
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    RETURN  shift, and go to state 25
    BREAK   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    ID      shift, and go to state 29
    '{'     shift, and go to state 30
    ';'     shift, and go to state 32

<<<<<<< HEAD
    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 99
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52
=======
    STMT      go to state 94
    BLOCK     go to state 34
    ASSIGN    go to state 35
    LOCATION  go to state 36
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 89

   28 STMT: WHILE '(' EXPR ')' . $@3 STMT

    $default  reduce using rule 27 ($@3)

    $@3  go to state 95


State 90

   20 VARS: ',' ID '=' . EXPR VARS

    TRUE   shift, and go to state 38
    FALSE  shift, and go to state 39
    ID     shift, and go to state 40
    NUM    shift, and go to state 41
    '('    shift, and go to state 42

    LOCATION  go to state 43
    METHOD    go to state 44
    EXPR      go to state 96
    ADD_EXPR  go to state 46
    TERM      go to state 47
    FACTOR    go to state 48


State 91

   19 VARS: ',' ID VARS .

    $default  reduce using rule 19 (VARS)


<<<<<<< HEAD
State 92

   28 STMT: IF '(' EXPR ')' . STMT ELSE STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35

    STMT      go to state 100
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40
=======
State 91

   18 DECL: TYPE ID '=' EXPR VARS . ';'

    ';'  shift, and go to state 97


State 92

   57 FACTOR: METHOD '(' ACTUALS ')' .

    $default  reduce using rule 57 (FACTOR)
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 93

<<<<<<< HEAD
   30 STMT: WHILE '(' EXPR ')' . $@3 STMT

    $default  reduce using rule 29 ($@3)

    $@3  go to state 101


State 94

   21 VARS: ',' ID '=' . EXPR VARS
=======
   58 ACTUALS: ARGS EXPR .
   60 ARGS: ARGS EXPR . ','
>>>>>>> parent of 62ac46c (some error recovery not perfect)

    ','  shift, and go to state 98

<<<<<<< HEAD
    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 102
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52
=======
    $default  reduce using rule 58 (ACTUALS)
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 95

   26 STMT: IF '(' EXPR ')' STMT . ELSE STMT

    ELSE  shift, and go to state 99


State 96

   28 STMT: WHILE '(' EXPR ')' $@3 . STMT

<<<<<<< HEAD
    ';'  shift, and go to state 103
=======
    RETURN  shift, and go to state 25
    BREAK   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    ID      shift, and go to state 29
    '{'     shift, and go to state 30
    ';'     shift, and go to state 32

    STMT      go to state 100
    BLOCK     go to state 34
    ASSIGN    go to state 35
    LOCATION  go to state 36
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 97

   64 ARGS: error ')' .

    $default  reduce using rule 64 (ARGS)


State 98

   20 VARS: ',' ID '=' EXPR . VARS

    ','  shift, and go to state 55

    $default  reduce using rule 21 (VARS)

    VARS  go to state 101


State 99

   18 DECL: TYPE ID '=' EXPR VARS ';' .

<<<<<<< HEAD
    ','  shift, and go to state 104

    $default  reduce using rule 60 (ACTUALS)


State 100

   28 STMT: IF '(' EXPR ')' STMT . ELSE STMT

    ELSE  shift, and go to state 105


State 101

   30 STMT: WHILE '(' EXPR ')' $@3 . STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35

    STMT      go to state 106
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 102

   21 VARS: ',' ID '=' EXPR . VARS

    ','  shift, and go to state 59

    $default  reduce using rule 22 (VARS)

    VARS  go to state 107
=======
    $default  reduce using rule 18 (DECL)


State 98

   60 ARGS: ARGS EXPR ',' .

    $default  reduce using rule 60 (ARGS)


State 99

   26 STMT: IF '(' EXPR ')' STMT ELSE . STMT

    RETURN  shift, and go to state 25
    BREAK   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    ID      shift, and go to state 29
    '{'     shift, and go to state 30
    ';'     shift, and go to state 32

    STMT      go to state 102
    BLOCK     go to state 34
    ASSIGN    go to state 35
    LOCATION  go to state 36


State 100

   28 STMT: WHILE '(' EXPR ')' $@3 STMT .

    $default  reduce using rule 28 (STMT)
>>>>>>> parent of 62ac46c (some error recovery not perfect)


State 103

   20 VARS: ',' ID '=' EXPR VARS .

    $default  reduce using rule 20 (VARS)


State 104

   26 STMT: IF '(' EXPR ')' STMT ELSE STMT .

<<<<<<< HEAD
    $default  reduce using rule 62 (ARGS)


State 105

   28 STMT: IF '(' EXPR ')' STMT ELSE . STMT

    RETURN  shift, and go to state 29
    BREAK   shift, and go to state 30
    IF      shift, and go to state 31
    WHILE   shift, and go to state 32
    ID      shift, and go to state 33
    ';'     shift, and go to state 34
    '{'     shift, and go to state 35

    STMT      go to state 108
    BLOCK     go to state 38
    ASSIGN    go to state 39
    LOCATION  go to state 40


State 106

   30 STMT: WHILE '(' EXPR ')' $@3 STMT .

    $default  reduce using rule 30 (STMT)


State 107

   21 VARS: ',' ID '=' EXPR VARS .

    $default  reduce using rule 21 (VARS)


State 108

   28 STMT: IF '(' EXPR ')' STMT ELSE STMT .

    $default  reduce using rule 28 (STMT)
=======
    $default  reduce using rule 26 (STMT)
>>>>>>> parent of 62ac46c (some error recovery not perfect)
