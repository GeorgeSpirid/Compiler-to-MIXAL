State 65 conflicts: 1 reduce/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: METH_LIST

    2 METH_LIST: METH METH_LIST
    3          | METH

    4 $@1: %empty

    5 $@2: %empty

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY

    7 PARAMS: FORMALS TYPE ID
    8       | %empty

    9 FORMALS: FORMALS TYPE ID ','
   10        | %empty

   11 TYPE: INT

   12 BODY: '{' DECLS STMTS '}'

   13 DECLS: DECL_LIST DECL
   14      | %empty

   15 DECL_LIST: DECL_LIST DECL
   16          | %empty

   17 DECL: TYPE ID VARS ';'
   18     | TYPE ID '=' EXPR VARS ';'

   19 VARS: ',' ID VARS
   20     | ',' ID '=' EXPR VARS
   21     | %empty
   22     | error

   23 STMTS: STMTS STMT
   24      | %empty

   25 STMT: ASSIGN ';'
   26     | RETURN EXPR ';'
   27     | IF '(' EXPR ')' STMT ELSE STMT

   28 $@3: %empty

   29 STMT: WHILE '(' EXPR ')' $@3 STMT
   30     | BREAK ';'
   31     | BLOCK
   32     | ';'
   33     | error ';'

   34 BLOCK: '{' STMTS '}'

   35 ASSIGN: LOCATION '=' EXPR

   36 LOCATION: ID

   37 METHOD: ID

   38 EXPR: ADD_EXPR RELOP ADD_EXPR
   39     | ADD_EXPR
   40     | error ';'

   41 RELOP: LE
   42      | LT
   43      | GT
   44      | GE
   45      | EQ
   46      | NE

   47 ADD_EXPR: ADD_EXPR ADDOP TERM
   48         | TERM

   49 ADDOP: '+'
   50      | '-'

   51 TERM: TERM MULOP FACTOR
   52     | FACTOR

   53 MULOP: '*'
   54      | '/'

   55 FACTOR: '(' EXPR ')'
   56       | LOCATION
   57       | NUM
   58       | TRUE
   59       | FALSE
   60       | METHOD '(' ACTUALS ')'
   61       | ')'

   62 ACTUALS: ARGS EXPR
   63        | %empty

   64 ARGS: ARGS EXPR ','
   65     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6 27 29 55 60
    ')' (41) 6 27 29 55 60 61
    '*' (42) 53
    '+' (43) 49
    ',' (44) 9 19 20 64
    '-' (45) 50
    '/' (47) 54
    ';' (59) 17 18 25 26 30 32 33 40
    '=' (61) 18 20 35
    '{' (123) 12 34
    '}' (125) 12 34
    error (256) 22 33 40
    RETURN <yint> (258) 26
    BREAK <yint> (259) 30
    ELSE <yint> (260) 27
    IF <yint> (261) 27
    INT <yint> (262) 11
    WHILE <yint> (263) 29
    TRUE <yint> (264) 58
    FALSE <yint> (265) 59
    GT <yint> (266) 43
    LT <yint> (267) 42
    GE <yint> (268) 44
    LE <yint> (269) 41
    EQ <yint> (270) 45
    NE <yint> (271) 46
    ID <ystr> (272) 6 7 9 17 18 19 20 36 37
    NUM <yint> (273) 57


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    PROGRAM <stnode> (31)
        on left: 1
        on right: 0
    METH_LIST <stnode> (32)
        on left: 2 3
        on right: 1 2
    METH <stnode> (33)
        on left: 6
        on right: 2 3
    $@1 (34)
        on left: 4
        on right: 6
    $@2 (35)
        on left: 5
        on right: 6
    PARAMS <stnode> (36)
        on left: 7 8
        on right: 6
    FORMALS <stnode> (37)
        on left: 9 10
        on right: 7 9
    TYPE <stnode> (38)
        on left: 11
        on right: 6 7 9 17 18
    BODY <stnode> (39)
        on left: 12
        on right: 6
    DECLS <stnode> (40)
        on left: 13 14
        on right: 12
    DECL_LIST <stnode> (41)
        on left: 15 16
        on right: 13 15
    DECL <stnode> (42)
        on left: 17 18
        on right: 13 15
    VARS <stnode> (43)
        on left: 19 20 21 22
        on right: 17 18 19 20
    STMTS <stnode> (44)
        on left: 23 24
        on right: 12 23 34
    STMT <stnode> (45)
        on left: 25 26 27 29 30 31 32 33
        on right: 23 27 29
    $@3 (46)
        on left: 28
        on right: 29
    BLOCK <stnode> (47)
        on left: 34
        on right: 31
    ASSIGN <stnode> (48)
        on left: 35
        on right: 25
    LOCATION <stnode> (49)
        on left: 36
        on right: 35 56
    METHOD <stnode> (50)
        on left: 37
        on right: 60
    EXPR <stnode> (51)
        on left: 38 39 40
        on right: 18 20 26 27 29 35 55 62 64
    RELOP <stnode> (52)
        on left: 41 42 43 44 45 46
        on right: 38
    ADD_EXPR <stnode> (53)
        on left: 47 48
        on right: 38 39 47
    ADDOP <stnode> (54)
        on left: 49 50
        on right: 47
    TERM <stnode> (55)
        on left: 51 52
        on right: 47 48 51
    MULOP <stnode> (56)
        on left: 53 54
        on right: 51
    FACTOR <stnode> (57)
        on left: 55 56 57 58 59 60 61
        on right: 51 52
    ACTUALS <stnode> (58)
        on left: 62 63
        on right: 60
    ARGS <stnode> (59)
        on left: 64 65
        on right: 62 64


State 0

    0 $accept: . PROGRAM $end

    INT  shift, and go to state 1

    PROGRAM    go to state 2
    METH_LIST  go to state 3
    METH       go to state 4
    TYPE       go to state 5


State 1

   11 TYPE: INT .

    $default  reduce using rule 11 (TYPE)


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


State 3

    1 PROGRAM: METH_LIST .

    $default  reduce using rule 1 (PROGRAM)


State 4

    2 METH_LIST: METH . METH_LIST
    3          | METH .

    INT  shift, and go to state 1

    $default  reduce using rule 3 (METH_LIST)

    METH_LIST  go to state 7
    METH       go to state 4
    TYPE       go to state 5


State 5

    6 METH: TYPE . ID $@1 '(' PARAMS ')' $@2 BODY

    ID  shift, and go to state 8


State 6

    0 $accept: PROGRAM $end .

    $default  accept


State 7

    2 METH_LIST: METH METH_LIST .

    $default  reduce using rule 2 (METH_LIST)


State 8

    6 METH: TYPE ID . $@1 '(' PARAMS ')' $@2 BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 METH: TYPE ID $@1 . '(' PARAMS ')' $@2 BODY

    '('  shift, and go to state 10


State 10

    6 METH: TYPE ID $@1 '(' . PARAMS ')' $@2 BODY

    INT       reduce using rule 10 (FORMALS)
    $default  reduce using rule 8 (PARAMS)

    PARAMS   go to state 11
    FORMALS  go to state 12


State 11

    6 METH: TYPE ID $@1 '(' PARAMS . ')' $@2 BODY

    ')'  shift, and go to state 13


State 12

    7 PARAMS: FORMALS . TYPE ID
    9 FORMALS: FORMALS . TYPE ID ','

    INT  shift, and go to state 1

    TYPE  go to state 14


State 13

    6 METH: TYPE ID $@1 '(' PARAMS ')' . $@2 BODY

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 14

    7 PARAMS: FORMALS TYPE . ID
    9 FORMALS: FORMALS TYPE . ID ','

    ID  shift, and go to state 16


State 15

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 . BODY

    '{'  shift, and go to state 17

    BODY  go to state 18


State 16

    7 PARAMS: FORMALS TYPE ID .
    9 FORMALS: FORMALS TYPE ID . ','

    ','  shift, and go to state 19

    $default  reduce using rule 7 (PARAMS)


State 17

   12 BODY: '{' . DECLS STMTS '}'

    INT       reduce using rule 16 (DECL_LIST)
    $default  reduce using rule 14 (DECLS)

    DECLS      go to state 20
    DECL_LIST  go to state 21


State 18

    6 METH: TYPE ID $@1 '(' PARAMS ')' $@2 BODY .

    $default  reduce using rule 6 (METH)


State 19

    9 FORMALS: FORMALS TYPE ID ',' .

    $default  reduce using rule 9 (FORMALS)


State 20

   12 BODY: '{' DECLS . STMTS '}'

    $default  reduce using rule 24 (STMTS)

    STMTS  go to state 22


State 21

   13 DECLS: DECL_LIST . DECL
   15 DECL_LIST: DECL_LIST . DECL

    INT  shift, and go to state 1

    TYPE  go to state 23
    DECL  go to state 24


State 22

   12 BODY: '{' DECLS STMTS . '}'
   23 STMTS: STMTS . STMT

    error   shift, and go to state 25
    RETURN  shift, and go to state 26
    BREAK   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    ID      shift, and go to state 30
    '{'     shift, and go to state 31
    '}'     shift, and go to state 32
    ';'     shift, and go to state 33

    STMT      go to state 34
    BLOCK     go to state 35
    ASSIGN    go to state 36
    LOCATION  go to state 37


State 23

   17 DECL: TYPE . ID VARS ';'
   18     | TYPE . ID '=' EXPR VARS ';'

    ID  shift, and go to state 38


State 24

   13 DECLS: DECL_LIST DECL .
   15 DECL_LIST: DECL_LIST DECL .

    INT       reduce using rule 15 (DECL_LIST)
    $default  reduce using rule 13 (DECLS)


State 25

   33 STMT: error . ';'

    ';'  shift, and go to state 39


State 26

   26 STMT: RETURN . EXPR ';'

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 49
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 27

   30 STMT: BREAK . ';'

    ';'  shift, and go to state 53


State 28

   27 STMT: IF . '(' EXPR ')' STMT ELSE STMT

    '('  shift, and go to state 54


State 29

   29 STMT: WHILE . '(' EXPR ')' $@3 STMT

    '('  shift, and go to state 55


State 30

   36 LOCATION: ID .

    $default  reduce using rule 36 (LOCATION)


State 31

   34 BLOCK: '{' . STMTS '}'

    $default  reduce using rule 24 (STMTS)

    STMTS  go to state 56


State 32

   12 BODY: '{' DECLS STMTS '}' .

    $default  reduce using rule 12 (BODY)


State 33

   32 STMT: ';' .

    $default  reduce using rule 32 (STMT)


State 34

   23 STMTS: STMTS STMT .

    $default  reduce using rule 23 (STMTS)


State 35

   31 STMT: BLOCK .

    $default  reduce using rule 31 (STMT)


State 36

   25 STMT: ASSIGN . ';'

    ';'  shift, and go to state 57


State 37

   35 ASSIGN: LOCATION . '=' EXPR

    '='  shift, and go to state 58


State 38

   17 DECL: TYPE ID . VARS ';'
   18     | TYPE ID . '=' EXPR VARS ';'

    error  shift, and go to state 59
    ','    shift, and go to state 60
    '='    shift, and go to state 61

    ';'  reduce using rule 21 (VARS)

    VARS  go to state 62


State 39

   33 STMT: error ';' .

    $default  reduce using rule 33 (STMT)


State 40

   40 EXPR: error . ';'

    ';'  shift, and go to state 63


State 41

   58 FACTOR: TRUE .

    $default  reduce using rule 58 (FACTOR)


State 42

   59 FACTOR: FALSE .

    $default  reduce using rule 59 (FACTOR)


State 43

   36 LOCATION: ID .
   37 METHOD: ID .

    '('       reduce using rule 37 (METHOD)
    $default  reduce using rule 36 (LOCATION)


State 44

   57 FACTOR: NUM .

    $default  reduce using rule 57 (FACTOR)


State 45

   55 FACTOR: '(' . EXPR ')'

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 64
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 46

   61 FACTOR: ')' .

    $default  reduce using rule 61 (FACTOR)


State 47

   56 FACTOR: LOCATION .

    $default  reduce using rule 56 (FACTOR)


State 48

   60 FACTOR: METHOD . '(' ACTUALS ')'

    '('  shift, and go to state 65


State 49

   26 STMT: RETURN EXPR . ';'

    ';'  shift, and go to state 66


State 50

   38 EXPR: ADD_EXPR . RELOP ADD_EXPR
   39     | ADD_EXPR .
   47 ADD_EXPR: ADD_EXPR . ADDOP TERM

    GT   shift, and go to state 67
    LT   shift, and go to state 68
    GE   shift, and go to state 69
    LE   shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 39 (EXPR)

    RELOP  go to state 75
    ADDOP  go to state 76


State 51

   48 ADD_EXPR: TERM .
   51 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 48 (ADD_EXPR)

    MULOP  go to state 79


State 52

   52 TERM: FACTOR .

    $default  reduce using rule 52 (TERM)


State 53

   30 STMT: BREAK ';' .

    $default  reduce using rule 30 (STMT)


State 54

   27 STMT: IF '(' . EXPR ')' STMT ELSE STMT

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 80
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 55

   29 STMT: WHILE '(' . EXPR ')' $@3 STMT

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 81
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 56

   23 STMTS: STMTS . STMT
   34 BLOCK: '{' STMTS . '}'

    error   shift, and go to state 25
    RETURN  shift, and go to state 26
    BREAK   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    ID      shift, and go to state 30
    '{'     shift, and go to state 31
    '}'     shift, and go to state 82
    ';'     shift, and go to state 33

    STMT      go to state 34
    BLOCK     go to state 35
    ASSIGN    go to state 36
    LOCATION  go to state 37


State 57

   25 STMT: ASSIGN ';' .

    $default  reduce using rule 25 (STMT)


State 58

   35 ASSIGN: LOCATION '=' . EXPR

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 83
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 59

   22 VARS: error .

    $default  reduce using rule 22 (VARS)


State 60

   19 VARS: ',' . ID VARS
   20     | ',' . ID '=' EXPR VARS

    ID  shift, and go to state 84


State 61

   18 DECL: TYPE ID '=' . EXPR VARS ';'

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 85
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 62

   17 DECL: TYPE ID VARS . ';'

    ';'  shift, and go to state 86


State 63

   40 EXPR: error ';' .

    $default  reduce using rule 40 (EXPR)


State 64

   55 FACTOR: '(' EXPR . ')'

    ')'  shift, and go to state 87


State 65

   60 FACTOR: METHOD '(' . ACTUALS ')'

    ')'       reduce using rule 63 (ACTUALS)
    ')'       [reduce using rule 65 (ARGS)]
    $default  reduce using rule 65 (ARGS)

    ACTUALS  go to state 88
    ARGS     go to state 89

    reduce/reduce conflict on token ')':
       63 ACTUALS: %empty .
       65 ARGS: %empty .
      First example: METHOD . ')'
      First reduce derivation
        FACTOR
        `-> 60: METHOD ACTUALS          ')'
                       `-> 63: %empty .
      Second example: . ')' EXPR ')'
      Second reduce derivation
        FACTOR
        `-> 60: ARGS             ADD_EXPR                    ACTUALS      ')'
                `-> 65: %empty . `-> 48: TERM                `-> 62: EXPR
                                         `-> 52: FACTOR
                                                 `-> 61: ')'



State 66

   26 STMT: RETURN EXPR ';' .

    $default  reduce using rule 26 (STMT)


State 67

   43 RELOP: GT .

    $default  reduce using rule 43 (RELOP)


State 68

   42 RELOP: LT .

    $default  reduce using rule 42 (RELOP)


State 69

   44 RELOP: GE .

    $default  reduce using rule 44 (RELOP)


State 70

   41 RELOP: LE .

    $default  reduce using rule 41 (RELOP)


State 71

   45 RELOP: EQ .

    $default  reduce using rule 45 (RELOP)


State 72

   46 RELOP: NE .

    $default  reduce using rule 46 (RELOP)


State 73

   49 ADDOP: '+' .

    $default  reduce using rule 49 (ADDOP)


State 74

   50 ADDOP: '-' .

    $default  reduce using rule 50 (ADDOP)


State 75

   38 EXPR: ADD_EXPR RELOP . ADD_EXPR

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    ADD_EXPR  go to state 90
    TERM      go to state 51
    FACTOR    go to state 52


State 76

   47 ADD_EXPR: ADD_EXPR ADDOP . TERM

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    TERM      go to state 91
    FACTOR    go to state 52


State 77

   53 MULOP: '*' .

    $default  reduce using rule 53 (MULOP)


State 78

   54 MULOP: '/' .

    $default  reduce using rule 54 (MULOP)


State 79

   51 TERM: TERM MULOP . FACTOR

    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    FACTOR    go to state 92


State 80

   27 STMT: IF '(' EXPR . ')' STMT ELSE STMT

    ')'  shift, and go to state 93


State 81

   29 STMT: WHILE '(' EXPR . ')' $@3 STMT

    ')'  shift, and go to state 94


State 82

   34 BLOCK: '{' STMTS '}' .

    $default  reduce using rule 34 (BLOCK)


State 83

   35 ASSIGN: LOCATION '=' EXPR .

    $default  reduce using rule 35 (ASSIGN)


State 84

   19 VARS: ',' ID . VARS
   20     | ',' ID . '=' EXPR VARS

    error  shift, and go to state 59
    ','    shift, and go to state 60
    '='    shift, and go to state 95

    ';'  reduce using rule 21 (VARS)

    VARS  go to state 96


State 85

   18 DECL: TYPE ID '=' EXPR . VARS ';'

    error  shift, and go to state 59
    ','    shift, and go to state 60

    ';'  reduce using rule 21 (VARS)

    VARS  go to state 97


State 86

   17 DECL: TYPE ID VARS ';' .

    $default  reduce using rule 17 (DECL)


State 87

   55 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 55 (FACTOR)


State 88

   60 FACTOR: METHOD '(' ACTUALS . ')'

    ')'  shift, and go to state 98


State 89

   62 ACTUALS: ARGS . EXPR
   64 ARGS: ARGS . EXPR ','

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 99
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 90

   38 EXPR: ADD_EXPR RELOP ADD_EXPR .
   47 ADD_EXPR: ADD_EXPR . ADDOP TERM

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 38 (EXPR)

    ADDOP  go to state 76


State 91

   47 ADD_EXPR: ADD_EXPR ADDOP TERM .
   51 TERM: TERM . MULOP FACTOR

    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 47 (ADD_EXPR)

    MULOP  go to state 79


State 92

   51 TERM: TERM MULOP FACTOR .

    $default  reduce using rule 51 (TERM)


State 93

   27 STMT: IF '(' EXPR ')' . STMT ELSE STMT

    error   shift, and go to state 25
    RETURN  shift, and go to state 26
    BREAK   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    ID      shift, and go to state 30
    '{'     shift, and go to state 31
    ';'     shift, and go to state 33

    STMT      go to state 100
    BLOCK     go to state 35
    ASSIGN    go to state 36
    LOCATION  go to state 37


State 94

   29 STMT: WHILE '(' EXPR ')' . $@3 STMT

    $default  reduce using rule 28 ($@3)

    $@3  go to state 101


State 95

   20 VARS: ',' ID '=' . EXPR VARS

    error  shift, and go to state 40
    TRUE   shift, and go to state 41
    FALSE  shift, and go to state 42
    ID     shift, and go to state 43
    NUM    shift, and go to state 44
    '('    shift, and go to state 45
    ')'    shift, and go to state 46

    LOCATION  go to state 47
    METHOD    go to state 48
    EXPR      go to state 102
    ADD_EXPR  go to state 50
    TERM      go to state 51
    FACTOR    go to state 52


State 96

   19 VARS: ',' ID VARS .

    $default  reduce using rule 19 (VARS)


State 97

   18 DECL: TYPE ID '=' EXPR VARS . ';'

    ';'  shift, and go to state 103


State 98

   60 FACTOR: METHOD '(' ACTUALS ')' .

    $default  reduce using rule 60 (FACTOR)


State 99

   62 ACTUALS: ARGS EXPR .
   64 ARGS: ARGS EXPR . ','

    ','  shift, and go to state 104

    $default  reduce using rule 62 (ACTUALS)


State 100

   27 STMT: IF '(' EXPR ')' STMT . ELSE STMT

    ELSE  shift, and go to state 105


State 101

   29 STMT: WHILE '(' EXPR ')' $@3 . STMT

    error   shift, and go to state 25
    RETURN  shift, and go to state 26
    BREAK   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    ID      shift, and go to state 30
    '{'     shift, and go to state 31
    ';'     shift, and go to state 33

    STMT      go to state 106
    BLOCK     go to state 35
    ASSIGN    go to state 36
    LOCATION  go to state 37


State 102

   20 VARS: ',' ID '=' EXPR . VARS

    error  shift, and go to state 59
    ','    shift, and go to state 60

    ';'  reduce using rule 21 (VARS)

    VARS  go to state 107


State 103

   18 DECL: TYPE ID '=' EXPR VARS ';' .

    $default  reduce using rule 18 (DECL)


State 104

   64 ARGS: ARGS EXPR ',' .

    $default  reduce using rule 64 (ARGS)


State 105

   27 STMT: IF '(' EXPR ')' STMT ELSE . STMT

    error   shift, and go to state 25
    RETURN  shift, and go to state 26
    BREAK   shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    ID      shift, and go to state 30
    '{'     shift, and go to state 31
    ';'     shift, and go to state 33

    STMT      go to state 108
    BLOCK     go to state 35
    ASSIGN    go to state 36
    LOCATION  go to state 37


State 106

   29 STMT: WHILE '(' EXPR ')' $@3 STMT .

    $default  reduce using rule 29 (STMT)


State 107

   20 VARS: ',' ID '=' EXPR VARS .

    $default  reduce using rule 20 (VARS)


State 108

   27 STMT: IF '(' EXPR ')' STMT ELSE STMT .

    $default  reduce using rule 27 (STMT)
